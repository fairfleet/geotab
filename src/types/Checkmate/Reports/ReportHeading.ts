//     This code was generated by a Reinforced.Typings tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.

/** The report heading. */
export enum ReportHeading {
  /** The device name */
  DeviceName = "DeviceName",
  /** The device identifier */
  DeviceId = "DeviceId",
  /** The device comment */
  DeviceComment = "DeviceComment",
  /** The device group */
  DeviceGroup = "DeviceGroup",
  /** The driver group */
  DriverGroup = "DriverGroup",
  /** The workTime name */
  WorkTimeName = "WorkTimeName",
  /** The trip detail maximum speed */
  TripDetailMaximumSpeed = "TripDetailMaximumSpeed",
  /** The trip detail stop duration */
  TripDetailStopDuration = "TripDetailStopDuration",
  /** The trip detail route name */
  TripDetailRouteName = "TripDetailRouteName",
  /** The trip detail idling duration */
  TripDetailIdlingDuration = "TripDetailIdlingDuration",
  /** The trip detail stop date time */
  TripDetailStopDateTime = "TripDetailStopDateTime",
  /** The trip detail start date time */
  TripDetailStartDateTime = "TripDetailStartDateTime",
  /** The trip detail driving duration */
  TripDetailDrivingDuraion = "TripDetailDrivingDuraion",
  /** The trip detail distance */
  TripDetailDistance = "TripDetailDistance",
  /** The trip detail latitude */
  TripDetailLatitude = "TripDetailLatitude",
  /** The trip detail longitude */
  TripDetailLongitude = "TripDetailLongitude",
  /** The trip detail location */
  TripDetailLocation = "TripDetailLocation",
  /** The trip start location */
  TripDetailStartLocation = "TripDetailStartLocation",
  /** The trip detail speed range1 */
  TripDetailSpeedRange1 = "TripDetailSpeedRange1",
  /** The trip detail speed range1 duration */
  TripDetailSpeedRange1Duration = "TripDetailSpeedRange1Duration",
  /** The trip detail speed range2 */
  TripDetailSpeedRange2 = "TripDetailSpeedRange2",
  /** The trip detail speed range2 duration */
  TripDetailSpeedRange2Duration = "TripDetailSpeedRange2Duration",
  /** The trip detail speed range3 */
  TripDetailSpeedRange3 = "TripDetailSpeedRange3",
  /** The trip detail speed range3 duration */
  TripDetailSpeedRange3Duration = "TripDetailSpeedRange3Duration",
  /** The trip detail is start drive work hours */
  TripDetailIsStartDriveWorkHours = "TripDetailIsStartDriveWorkHours",
  /** The trip detail is stop drive work hours */
  TripDetailIsStopDriveWorkHours = "TripDetailIsStopDriveWorkHours",
  /** The trip detail work hours distance */
  TripDetailWorkHoursDistance = "TripDetailWorkHoursDistance",
  /** The trip detail work hours trip time */
  TripDetailWorkHoursTripTime = "TripDetailWorkHoursTripTime",
  /** The trip detail work hours stop time */
  TripDetailWorkHoursStopTime = "TripDetailWorkHoursStopTime",
  /** The trip detail odometer at start */
  TripDetailOdometerAtStart = "TripDetailOdometerAtStart",
  /** The trip detail odometer at end */
  TripDetailOdometerAtEnd = "TripDetailOdometerAtEnd",
  /** The trip detail exception rule1 duration */
  TripDetailExceptionRule1Duration = "TripDetailExceptionRule1Duration",
  /** The trip detail exception rule1 count */
  TripDetailExceptionRule1Count = "TripDetailExceptionRule1Count",
  /** The trip detail exception rule1 distance */
  TripDetailExceptionRule1Distance = "TripDetailExceptionRule1Distance",
  /** The trip detail exception rule2 duration */
  TripDetailExceptionRule2Duration = "TripDetailExceptionRule2Duration",
  /** The trip detail exception rule2 count */
  TripDetailExceptionRule2Count = "TripDetailExceptionRule2Count",
  /** The trip detail exception rule2 distance */
  TripDetailExceptionRule2Distance = "TripDetailExceptionRule2Distance",
  /** The trip detail exception rule3 duration */
  TripDetailExceptionRule3Duration = "TripDetailExceptionRule3Duration",
  /** The trip detail exception rule3 count */
  TripDetailExceptionRule3Count = "TripDetailExceptionRule3Count",
  /** The trip detail exception rule3 distance */
  TripDetailExceptionRule3Distance = "TripDetailExceptionRule3Distance",
  /** The trip detail exception rule4 duration */
  TripDetailExceptionRule4Duration = "TripDetailExceptionRule4Duration",
  /** The trip detail exception rule4 count */
  TripDetailExceptionRule4Count = "TripDetailExceptionRule4Count",
  /** The trip detail exception rule4 distance */
  TripDetailExceptionRule4Distance = "TripDetailExceptionRule4Distance",
  /** The trip detail exception rule5 duration */
  TripDetailExceptionRule5Duration = "TripDetailExceptionRule5Duration",
  /** The trip detail exception rule5 count */
  TripDetailExceptionRule5Count = "TripDetailExceptionRule5Count",
  /** The trip detail exception rule5 distance */
  TripDetailExceptionRule5Distance = "TripDetailExceptionRule5Distance",
  /** The trip detail exception rule6 duration */
  TripDetailExceptionRule6Duration = "TripDetailExceptionRule6Duration",
  /** The trip detail exception rule6 count */
  TripDetailExceptionRule6Count = "TripDetailExceptionRule6Count",
  /** The trip detail exception rule6 distance */
  TripDetailExceptionRule6Distance = "TripDetailExceptionRule6Distance",
  /** The trip detail exception rule7 duration */
  TripDetailExceptionRule7Duration = "TripDetailExceptionRule7Duration",
  /** The trip detail exception rule7 count */
  TripDetailExceptionRule7Count = "TripDetailExceptionRule7Count",
  /** The trip detail exception rule7 distance */
  TripDetailExceptionRule7Distance = "TripDetailExceptionRule7Distance",
  /** The trip detail exception rule8 duration */
  TripDetailExceptionRule8Duration = "TripDetailExceptionRule8Duration",
  /** The trip detail exception rule8 count */
  TripDetailExceptionRule8Count = "TripDetailExceptionRule8Count",
  /** The trip detail exception rule8 distance */
  TripDetailExceptionRule8Distance = "TripDetailExceptionRule8Distance",
  /** The trip detail Privacy Mode. */
  TripDetailPrivateTrip = "TripDetailPrivateTrip",
  /** The trip category. */
  TripDetailCategory = "TripDetailCategory",
  /** The trip annotation. */
  TripDetailAnnotation = "TripDetailAnnotation",
  /** The trip summary name */
  TripSummaryName = "TripSummaryName",
  /** The trip summary group name */
  TripSummaryGroupName = "TripSummaryGroupName",
  /** The trip summary customer duration */
  TripSummaryCustomerDuration = "TripSummaryCustomerDuration",
  /** The trip summary non-customer duration */
  TripSummaryNonCustomerDuration = "TripSummaryNonCustomerDuration",
  /** The trip summary driving duration */
  TripSummaryDrivingDuration = "TripSummaryDrivingDuration",
  /** The trip summary office depot duration */
  TripSummaryOfficeDepotDuration = "TripSummaryOfficeDepotDuration",
  /** The trip summary home duration */
  TripSummaryHomeDuration = "TripSummaryHomeDuration",
  /** The trip summary customer stops count */
  TripSummaryCustomerStopsCount = "TripSummaryCustomerStopsCount",
  /** The trip summary stop count */
  TripSummaryStopCount = "TripSummaryStopCount",
  /** The trip summary customer duration percentage */
  TripSummaryCustomerDurationPercentage = "TripSummaryCustomerDurationPercentage",
  /** The trip summary non-customer duration percentage */
  TripSummaryNonCustomerDurationPercentage = "TripSummaryNonCustomerDurationPercentage",
  /** The trip summary driving duration percentage */
  TripSummaryDrivingDurationPercentage = "TripSummaryDrivingDurationPercentage",
  /** The trip summary office depot duration percentage */
  TripSummaryOfficeDepotDurationPercentage = "TripSummaryOfficeDepotDurationPercentage",
  /** The trip summary home duration percentage */
  TripSummaryHomeDurationPercentage = "TripSummaryHomeDurationPercentage",
  /** The trip summary distance */
  TripSummaryDistance = "TripSummaryDistance",
  /** The trip summary idling duration */
  TripSummaryIdlingDuration = "TripSummaryIdlingDuration",
  /** The trip summary idling duration percentage */
  TripSummaryIdlingDurationPercentage = "TripSummaryIdlingDurationPercentage",
  /** The trip summary period start date */
  TripSummaryPeriodStartDate = "TripSummaryPeriodStartDate",
  /** The trip summary period end date */
  TripSummaryPeriodEndDate = "TripSummaryPeriodEndDate",
  /** The trip summary period number */
  TripSummaryPeriodNumber = "TripSummaryPeriodNumber",
  /** The trip summary device vocation */
  TripSummaryVocation = "TripSummaryVocation",
  /** The trip summary maximum speed */
  TripSummaryMaximumSpeed = "TripSummaryMaximumSpeed",
  /** The trip detail odometer at end */
  TripSummaryOdometerAtEnd = "TripSummaryOdometerAtEnd",
  /** The number of days driven */
  TripSummaryDaysDriven = "TripSummaryDaysDriven",
  /** The debug date time */
  DebugDateTime = "DebugDateTime",
  /** The debug record type */
  DebugRecordType = "DebugRecordType",
  /** The debug speed */
  DebugSpeed = "DebugSpeed",
  /** The debug longitude */
  DebugLongitude = "DebugLongitude",
  /** The debug latitude */
  DebugLatitude = "DebugLatitude",
  /** The debug location */
  DebugLocation = "DebugLocation",
  /** The debug record reason */
  DebugRecordReason = "DebugRecordReason",
  /** The debug record data in hexadecimal */
  DebugRecordDataInHex = "DebugRecordDataInHex",
  /** The debug ignition */
  DebugIgnition = "DebugIgnition",
  /** The debug aux1 */
  DebugAux1 = "DebugAux1",
  /** The debug aux2 */
  DebugAux2 = "DebugAux2",
  /** The debug aux3 */
  DebugAux3 = "DebugAux3",
  /** The debug aux4 */
  DebugAux4 = "DebugAux4",
  /** The debug aux5 */
  DebugAux5 = "DebugAux5",
  /** The debug aux6 */
  DebugAux6 = "DebugAux6",
  /** The debug aux7 */
  DebugAux7 = "DebugAux7",
  /** The debug aux8 */
  DebugAux8 = "DebugAux8",
  /** The debug position valid */
  DebugPositionValid = "DebugPositionValid",
  /** The debug position valid at unit */
  DebugPositionValidAtUnit = "DebugPositionValidAtUnit",
  /** The debug loaded section */
  DebugLoadedSection = "DebugLoadedSection",
  /** The debug data length */
  DebugDataLength = "DebugDataLength",
  /** The debug status data value */
  DebugStatusDataValue = "DebugStatusDataValue",
  /** The diagnostic name */
  DiagnosticName = "DiagnosticName",
  /** The diagnostic identifier */
  DiagnosticId = "DiagnosticId",
  /** The diagnostic code */
  DiagnosticCode = "DiagnosticCode",
  /** The controller name */
  ControllerName = "ControllerName",
  /** The controller identifier */
  ControllerId = "ControllerId",
  /** The controller code */
  ControllerCode = "ControllerCode",
  /** The failure mode name */
  FailureModeName = "FailureModeName",
  /** The failure mode identifier */
  FailureModeId = "FailureModeId",
  /** The failure mode code */
  FailureModeCode = "FailureModeCode",
  /** The unit of measure name */
  UnitOfMeasureName = "UnitOfMeasureName",
  /** The unit of measure identifier */
  UnitOfMeasureId = "UnitOfMeasureId",
  /** The group name */
  GroupName = "GroupName",
  /** The group identifier */
  GroupId = "GroupId",
  /** The group comment */
  GroupComment = "GroupComment",
  /** The node detail parents */
  NodeDetailParents = "NodeDetailParents",
  /** The risk management speed limit1 count */
  RiskManagementSpeedLimit1Count = "RiskManagementSpeedLimit1Count",
  /** The risk management speed limit2 count */
  RiskManagementSpeedLimit2Count = "RiskManagementSpeedLimit2Count",
  /** The risk management speed limit3 count */
  RiskManagementSpeedLimit3Count = "RiskManagementSpeedLimit3Count",
  /** The risk management average speed */
  RiskManagementAverageSpeed = "RiskManagementAverageSpeed",
  /** The risk management stop under10 count */
  RiskManagementStopUnder10Count = "RiskManagementStopUnder10Count",
  /** The risk management stop over10 count */
  RiskManagementStopOver10Count = "RiskManagementStopOver10Count",
  /** The risk management stop over20 count */
  RiskManagementStopOver20Count = "RiskManagementStopOver20Count",
  /** The risk management stop over30 count */
  RiskManagementStopOver30Count = "RiskManagementStopOver30Count",
  /** The risk management stop over40 count */
  RiskManagementStopOver40Count = "RiskManagementStopOver40Count",
  /** The risk management stop over50 count */
  RiskManagementStopOver50Count = "RiskManagementStopOver50Count",
  /** The risk management idling over5 count */
  RiskManagementIdlingOver5Count = "RiskManagementIdlingOver5Count",
  /** The risk management idling duration */
  RiskManagementIdlingDuration = "RiskManagementIdlingDuration",
  /** The risk management after hours trip count */
  RiskManagementAfterHoursTripCount = "RiskManagementAfterHoursTripCount",
  /** The risk management total distance */
  RiskManagementTotalDistance = "RiskManagementTotalDistance",
  /** The risk management total stops count */
  RiskManagementTotalStopsCount = "RiskManagementTotalStopsCount",
  /** The risk management aux1 */
  RiskManagementAux1 = "RiskManagementAux1",
  /** The risk management exception rule1 */
  RiskManagementExceptionRule1 = "RiskManagementExceptionRule1",
  /** The risk management exception rule1 duration */
  RiskManagementExceptionRule1Duration = "RiskManagementExceptionRule1Duration",
  /** The risk management exception rule1 count */
  RiskManagementExceptionRule1Count = "RiskManagementExceptionRule1Count",
  /** The risk management exception rule1 distance */
  RiskManagementExceptionRule1Distance = "RiskManagementExceptionRule1Distance",
  /** The risk management exception rule2 */
  RiskManagementExceptionRule2 = "RiskManagementExceptionRule2",
  /** The risk management exception rule2 duration */
  RiskManagementExceptionRule2Duration = "RiskManagementExceptionRule2Duration",
  /** The risk management exception rule2 count */
  RiskManagementExceptionRule2Count = "RiskManagementExceptionRule2Count",
  /** The risk management exception rule2 distance */
  RiskManagementExceptionRule2Distance = "RiskManagementExceptionRule2Distance",
  /** The risk management exception rule3 */
  RiskManagementExceptionRule3 = "RiskManagementExceptionRule3",
  /** The risk management exception rule3 duration */
  RiskManagementExceptionRule3Duration = "RiskManagementExceptionRule3Duration",
  /** The risk management exception rule3 count */
  RiskManagementExceptionRule3Count = "RiskManagementExceptionRule3Count",
  /** The risk management exception rule3 distance */
  RiskManagementExceptionRule3Distance = "RiskManagementExceptionRule3Distance",
  /** The risk management exception rule4 */
  RiskManagementExceptionRule4 = "RiskManagementExceptionRule4",
  /** The risk management exception rule4 duration */
  RiskManagementExceptionRule4Duration = "RiskManagementExceptionRule4Duration",
  /** The risk management exception rule4 count */
  RiskManagementExceptionRule4Count = "RiskManagementExceptionRule4Count",
  /** The risk management exception rule4 distance */
  RiskManagementExceptionRule4Distance = "RiskManagementExceptionRule4Distance",
  /** The risk management exception rule5 */
  RiskManagementExceptionRule5 = "RiskManagementExceptionRule5",
  /** The risk management exception rule5 duration */
  RiskManagementExceptionRule5Duration = "RiskManagementExceptionRule5Duration",
  /** The risk management exception rule5 count */
  RiskManagementExceptionRule5Count = "RiskManagementExceptionRule5Count",
  /** The risk management exception rule5 distance */
  RiskManagementExceptionRule5Distance = "RiskManagementExceptionRule5Distance",
  /** The risk management exception rule6 */
  RiskManagementExceptionRule6 = "RiskManagementExceptionRule6",
  /** The risk management exception rule6 duration */
  RiskManagementExceptionRule6Duration = "RiskManagementExceptionRule6Duration",
  /** The risk management exception rule6 count */
  RiskManagementExceptionRule6Count = "RiskManagementExceptionRule6Count",
  /** The risk management exception rule6 distance */
  RiskManagementExceptionRule6Distance = "RiskManagementExceptionRule6Distance",
  /** The risk management total driving duration */
  RiskManagementTotalDrivingDuration = "RiskManagementTotalDrivingDuration",
  /** The risk management period start date */
  RiskManagementPeriodStartDate = "RiskManagementPeriodStartDate",
  /** The risk management period end date */
  RiskManagementPeriodEndDate = "RiskManagementPeriodEndDate",
  /** The risk management period number */
  RiskManagementPeriodNumber = "RiskManagementPeriodNumber",
  /** The risk management maximum speed */
  RiskManagementMaxSpeed = "RiskManagementMaxSpeed",
  /** The exception detail longitude */
  ExceptionDetailLongitude = "ExceptionDetailLongitude",
  /** The exception detail latitude */
  ExceptionDetailLatitude = "ExceptionDetailLatitude",
  /** The exception detail location */
  ExceptionDetailLocation = "ExceptionDetailLocation",
  /** The exception detail start time */
  ExceptionDetailStartTime = "ExceptionDetailStartTime",
  /** The exception detail end time */
  ExceptionDetailEndTime = "ExceptionDetailEndTime",
  /** The exception duration */
  ExceptionDuration = "ExceptionDuration",
  /** The exception trip distance */
  ExceptionTripDistance = "ExceptionTripDistance",
  /** The exception distance */
  ExceptionDistance = "ExceptionDistance",
  /** The exception detail details */
  ExceptionDetailDetails = "ExceptionDetailDetails",
  /** The exception detail extra information */
  ExceptionDetailExtraInfo = "ExceptionDetailExtraInfo",
  /** The legacy exception detail extra information */
  LegacyExceptionDetailExtraInfo = "LegacyExceptionDetailExtraInfo",
  /** The exception summary first incident */
  ExceptionSummaryFirstIncident = "ExceptionSummaryFirstIncident",
  /** The exception summary last incident */
  ExceptionSummaryLastIncident = "ExceptionSummaryLastIncident",
  /** The exception summary incident count */
  ExceptionSummaryIncidentCount = "ExceptionSummaryIncidentCount",
  /** The exception rule name */
  ExceptionRuleName = "ExceptionRuleName",
  /** The exception rule identifier */
  ExceptionRuleId = "ExceptionRuleId",
  /** The exception rule comment */
  ExceptionRuleComment = "ExceptionRuleComment",
  /** The exception rule group */
  ExceptionRuleGroup = "ExceptionRuleGroup",
  /** The time card first depart date */
  TimeCardFirstDepartDate = "TimeCardFirstDepartDate",
  /** The time card last arrival date */
  TimeCardLastArriveDate = "TimeCardLastArriveDate",
  /** The time card location */
  TimeCardLocation = "TimeCardLocation",
  /** The time card non-customer stop time */
  TimeCardNonCustomerStopTime = "TimeCardNonCustomerStopTime",
  /** The time card customer stop time */
  TimeCardCustomerStopTime = "TimeCardCustomerStopTime",
  /** The time card trip time */
  TimeCardTripTime = "TimeCardTripTime",
  /** The time card idle time */
  TimeCardIdleTime = "TimeCardIdleTime",
  /** The time card maximum speed */
  TimeCardMaxSpeed = "TimeCardMaxSpeed",
  /** The time card latitude */
  TimeCardLatitude = "TimeCardLatitude",
  /** The time card longitude */
  TimeCardLongitude = "TimeCardLongitude",
  /** The driver key identifier */
  DriverKeyId = "DriverKeyId",
  /** The driver key serial number */
  DriverKeySerialNumber = "DriverKeySerialNumber",
  /** The driver key type */
  DriverkeyType = "DriverkeyType",
  /** The user designation */
  UserDesignation = "UserDesignation",
  /** The user authority name */
  UserAuthorityName = "UserAuthorityName",
  /** The user authority address */
  UserAuthorityAddress = "UserAuthorityAddress",
  /** The user employee no */
  UserEmployeeNo = "UserEmployeeNo",
  /** The user active from */
  UserActiveFrom = "UserActiveFrom",
  /** The user active to */
  UserActiveTo = "UserActiveTo",
  /** The name of the company for the user. */
  UserCompanyName = "UserCompanyName",
  /** The company address for the user. */
  UserCompanyAddress = "UserCompanyAddress",
  /** The driver license number of the user. */
  DriverLicenseNumber = "DriverLicenseNumber",
  /** The driver license province or state of the user. */
  DriverLicenseProvince = "DriverLicenseProvince",
  /** The carrier number. */
  UserCarrierNumber = "UserCarrierNumber",
  /** The last date the user accessed the system. */
  UserLastAccessDate = "UserLastAccessDate",
  /** The home time zone of the user. */
  UserTimeZone = "UserTimeZone",
  /** The audit name */
  AuditName = "AuditName",
  /** The audit user name */
  AuditUserName = "AuditUserName",
  /** The audit date time */
  AuditDateTime = "AuditDateTime",
  /** The audit comment */
  AuditComment = "AuditComment",
  /** The display user groups */
  DisplayUserGroups = "DisplayUserGroups",
  /** The display user report groups */
  DisplayUserReportGroups = "DisplayUserReportGroups",
  /** The display user security level */
  DisplayUserSecurityLevel = "DisplayUserSecurityLevel",
  /** The user comment */
  UserComment = "UserComment",
  /** The user identifier */
  UserId = "UserId",
  /** The user name */
  UserName = "UserName",
  /** The user first name */
  UserFirstName = "UserFirstName",
  /** The user last name */
  UserLastName = "UserLastName",
  /** The user authentication type */
  UserAuthenticationType = "UserAuthenticationType",
  /** The user HosRuleSet */
  UserHosRuleSet = "UserHosRuleSet",
  /** The service status database */
  ServiceStatusDatabase = "ServiceStatusDatabase",
  /** The service status source */
  ServiceStatusSource = "ServiceStatusSource",
  /** The service status information */
  ServiceStatusInfo = "ServiceStatusInfo",
  /** The service status last update */
  ServiceStatusLastUpdate = "ServiceStatusLastUpdate",
  /** The service status pc */
  ServiceStatusPC = "ServiceStatusPC",
  /** The service status */
  ServiceStatusStatus = "ServiceStatusStatus",
  /** The source name */
  SourceName = "SourceName",
  /** The source identifier */
  SourceId = "SourceId",
  /** The engine type name */
  EngineTypeName = "EngineTypeName",
  /** The engine type identifier */
  EngineTypeId = "EngineTypeId",
  /** The data diagnostic data length */
  DataDiagnosticDataLength = "DataDiagnosticDataLength",
  /** The data diagnostic conversion */
  DataDiagnosticConversion = "DataDiagnosticConversion",
  /** The data diagnostic offset */
  DataDiagnosticOffset = "DataDiagnosticOffset",
  /** The parameter group name */
  ParameterGroupName = "ParameterGroupName",
  /** The parameter group identifier */
  ParameterGroupId = "ParameterGroupId",
  /** The exception instance date time */
  ExceptionInstanceDateTime = "ExceptionInstanceDateTime",
  /** The route name */
  RouteName = "RouteName",
  /** The route identifier */
  RouteId = "RouteId",
  /** The route comment */
  RouteComment = "RouteComment",
  /** The route device local start date */
  RouteDeviceLocalStartDate = "RouteDeviceLocalStartDate",
  /** The vehicle day route drive time */
  VehicleDayRouteDriveTime = "VehicleDayRouteDriveTime",
  /** The vehicle day route distance */
  VehicleDayRouteDistance = "VehicleDayRouteDistance",
  /** The vehicle day route office time */
  VehicleDayRouteOfficeTime = "VehicleDayRouteOfficeTime",
  /** The vehicle day route customer time over threshold */
  VehicleDayRouteCustomerTimeOverThreshold = "VehicleDayRouteCustomerTimeOverThreshold",
  /** The vehicle day route customer time under threshold */
  VehicleDayRouteCustomerTimeUnderThreshold = "VehicleDayRouteCustomerTimeUnderThreshold",
  /** The vehicle day route home time */
  VehicleDayRouteHomeTime = "VehicleDayRouteHomeTime",
  /** The vehicle day route undefined stop time over threshold */
  VehicleDayRouteUndefinedStopTimeOverThreshold = "VehicleDayRouteUndefinedStopTimeOverThreshold",
  /** The vehicle day route undefined stop time under threshold */
  VehicleDayRouteUndefinedStopTimeUnderThreshold = "VehicleDayRouteUndefinedStopTimeUnderThreshold",
  /** The vehicle day route total stops */
  VehicleDayRouteTotalStops = "VehicleDayRouteTotalStops",
  /** The vehicle day route office stops */
  VehicleDayRouteOfficeStops = "VehicleDayRouteOfficeStops",
  /** The vehicle day route home stops */
  VehicleDayRouteHomeStops = "VehicleDayRouteHomeStops",
  /** The vehicle day route customer stops over threshold */
  VehicleDayRouteCustomerStopsOverThreshold = "VehicleDayRouteCustomerStopsOverThreshold",
  /** The vehicle day route customer stops under threshold */
  VehicleDayRouteCustomerStopsUnderThreshold = "VehicleDayRouteCustomerStopsUnderThreshold",
  /** The vehicle day route undefined stops over threshold */
  VehicleDayRouteUndefinedStopsOverThreshold = "VehicleDayRouteUndefinedStopsOverThreshold",
  /** The vehicle day route undefined stops under threshold */
  VehicleDayRouteUndefinedStopsUnderThreshold = "VehicleDayRouteUndefinedStopsUnderThreshold",
  /** The vehicle day route local first departure time */
  VehicleDayRouteLocalFirstDepartureTime = "VehicleDayRouteLocalFirstDepartureTime",
  /** The vehicle day route local last arrival time */
  VehicleDayRouteLocalLastArrivalTime = "VehicleDayRouteLocalLastArrivalTime",
  /** The vehicle day route employee list */
  VehicleDayRouteEmployeeList = "VehicleDayRouteEmployeeList",
  /** The vehicle day route percentage speeding */
  VehicleDayRoutePercentageSpeeding = "VehicleDayRoutePercentageSpeeding",
  /** The vehicle day route idle time */
  VehicleDayRouteIdleTime = "VehicleDayRouteIdleTime",
  /** The vehicle day route seat belt violations */
  VehicleDayRouteSeatbeltViolations = "VehicleDayRouteSeatbeltViolations",
  /** The vehicle day route speeding violations */
  VehicleDayRouteSpeedingViolations = "VehicleDayRouteSpeedingViolations",
  /** The vehicle day route jack rabbit starts */
  VehicleDayRouteJackRabbitStarts = "VehicleDayRouteJackRabbitStarts",
  /** The vehicle day route speeding violation time */
  VehicleDayRouteSpeedingViolationTime = "VehicleDayRouteSpeedingViolationTime",
  /** The notification date time */
  NotificationDateTime = "NotificationDateTime",
  /** The notification application exception data source */
  NotificationApplicationExceptionDataSource = "NotificationApplicationExceptionDataSource",
  /** The notification application exception data description */
  NotificationApplicationExceptionDataDescription = "NotificationApplicationExceptionDataDescription",
  /** The notification application exception data information */
  NotificationApplicationExceptionDataInfo = "NotificationApplicationExceptionDataInfo",
  /** The notification information data instance */
  NotificationInfoDataInstance = "NotificationInfoDataInstance",
  /** The notification information data source */
  NotificationInfoDataSource = "NotificationInfoDataSource",
  /** The notification information data information */
  NotificationInfoDataInfo = "NotificationInfoDataInfo",
  /** The notification news text full information */
  NotificationNewsTextFullInfo = "NotificationNewsTextFullInfo",
  /** The fuel tax country */
  FuelTaxCountry = "FuelTaxCountry",
  /** The fuel tax state */
  FuelTaxJurisdiction = "FuelTaxJurisdiction",
  /** Indicates whether updates are available to a fuel tax detail. */
  FuelTaxUpdatesAvailable = "FuelTaxUpdatesAvailable",
  /** The fuel tax enter time */
  FuelTaxEnterTime = "FuelTaxEnterTime",
  /** The fuel tax exit time */
  FuelTaxExitTime = "FuelTaxExitTime",
  /** The fuel tax enter odometer */
  FuelTaxEnterOdometer = "FuelTaxEnterOdometer",
  /** The fuel tax exit odometer */
  FuelTaxExitOdometer = "FuelTaxExitOdometer",
  /** The fuel tax distance */
  FuelTaxDistance = "FuelTaxDistance",
  /** The fuel tax GPS distance */
  FuelTaxGpsDistance = "FuelTaxGpsDistance",
  /** The fuel tax odometer offset */
  FuelTaxOdometerOffset = "FuelTaxOdometerOffset",
  /** The fuel tax latitude */
  FuelTaxLatitude = "FuelTaxLatitude",
  /** The fuel tax longitude */
  FuelTaxLongitude = "FuelTaxLongitude",
  /** The fuel tax VIN */
  FuelTaxVin = "FuelTaxVin",
  /** The fuel tax license plate */
  FuelTaxLicensePlate = "FuelTaxLicensePlate",
  /** The fuel tax is IFTA jurisdiction */
  FuelTaxIsIftaJurisdiction = "FuelTaxIsIftaJurisdiction",
  /** The fuel tax fuel type */
  FuelTaxFuelType = "FuelTaxFuelType",
  /** The fuel tax fuel purchased */
  FuelTaxFuelPurchased = "FuelTaxFuelPurchased",
  /** The fuel tax fuel used */
  FuelTaxFuelUsed = "FuelTaxFuelUsed",
  /** The fuel tax net taxable fuel */
  FuelTaxNetTaxableFuel = "FuelTaxNetTaxableFuel",
  /** The fuel tax fuel economy */
  FuelTaxFuelEconomy = "FuelTaxFuelEconomy",
  /** The fuel tax authority */
  FuelTaxAuthority = "FuelTaxAuthority",
  /** The fuel tax toll road */
  FuelTaxTollRoad = "FuelTaxTollRoad",
  /** The fuel tax road type */
  FuelTaxRoadType = "FuelTaxRoadType",
  /** The zone types */
  ZoneZoneTypes = "ZoneZoneTypes",
  /** The zone group */
  ZoneGroup = "ZoneGroup",
  /** The zone name */
  ZoneName = "ZoneName",
  /** The zone identifier */
  ZoneId = "ZoneId",
  /** The zone comment */
  ZoneComment = "ZoneComment",
  /** The zone start time */
  ZoneStartTime = "ZoneStartTime",
  /** The zone end time */
  ZoneEndTime = "ZoneEndTime",
  /** The zone displayed */
  ZoneDisplayed = "ZoneDisplayed",
  /** The zone is stop exception required */
  ZoneIsStopExceptionRequired = "ZoneIsStopExceptionRequired",
  /** The zone external reference */
  ZoneExternalReference = "ZoneExternalReference",
  /** The zone fill color */
  ZoneFillColor = "ZoneFillColor",
  /** The zone centroid longitude */
  ZoneCentroidLongitude = "ZoneCentroidLongitude",
  /** The zone centroid latitude */
  ZoneCentroidLatitude = "ZoneCentroidLatitude",
  /** The congregation start */
  CongregationStart = "CongregationStart",
  /** The congregation end */
  CongregationEnd = "CongregationEnd",
  /** The stop start */
  StopStart = "StopStart",
  /** The stop end */
  StopEnd = "StopEnd",
  /** The stop location */
  StopLocation = "StopLocation",
  /** The device status last heart beat */
  DeviceStatusLastHeartBeat = "DeviceStatusLastHeartBeat",
  /** The device status last fault data */
  DeviceStatusLastFaultData = "DeviceStatusLastFaultData",
  /** The device status last engine data */
  DeviceStatusLastEngineData = "DeviceStatusLastEngineData",
  /** The fault data identifier */
  FaultDataId = "FaultDataId",
  /** The fault data date time */
  FaultDataDateTime = "FaultDataDateTime",
  /** The fault data fault lamp state */
  FaultDataFaultLampState = "FaultDataFaultLampState",
  /** The fault data fault state */
  FaultDataFaultState = "FaultDataFaultState",
  /** The fault data count */
  FaultDataCount = "FaultDataCount",
  /** The fault data dismiss date time */
  FaultDataDismissDateTime = "FaultDataDismissDateTime",
  /** The fault data class. */
  FaultDataClass = "FaultDataClass",
  /** The fault data severity. */
  FaultDataSeverity = "FaultDataSeverity",
  /** The fault data source address. */
  FaultDataSourceAddress = "FaultDataSourceAddress",
  /** The flash code name */
  FlashCodeName = "FlashCodeName",
  /** The flash code identifier */
  FlashCodeId = "FlashCodeId",
  /** The flash code circuit index */
  FlashCodeCircuitIndex = "FlashCodeCircuitIndex",
  /** The flash code flash code index */
  FlashCodeFlashCodeIndex = "FlashCodeFlashCodeIndex",
  /** The flash code help URL */
  FlashCodeHelpUrl = "FlashCodeHelpUrl",
  /** The flash code priority level */
  FlashCodePriorityLevel = "FlashCodePriorityLevel",
  /** The flash code page reference */
  FlashCodePageReference = "FlashCodePageReference",
  /** The fault data amber warning lamp */
  FaultDataAmberWarningLamp = "FaultDataAmberWarningLamp",
  /** The fault data red stop lamp */
  FaultDataRedStopLamp = "FaultDataRedStopLamp",
  /** The fault data malfunction lamp */
  FaultDataMalfunctionLamp = "FaultDataMalfunctionLamp",
  /** The fault data protect warning lamp */
  FaultDataProtectWarningLamp = "FaultDataProtectWarningLamp",
  /** The status data date time */
  StatusDataDateTime = "StatusDataDateTime",
  /** The status data */
  StatusDataData = "StatusDataData",
  /** Address in SensorData */
  SensorDataAddress = "SensorDataAddress",
  /** The device details current odometer */
  DeviceDetailsCurrentOdometer = "DeviceDetailsCurrentOdometer",
  /** The device details last stop longitude */
  DeviceDetailsLastStopLongitude = "DeviceDetailsLastStopLongitude",
  /** The device details last stop latitude */
  DeviceDetailsLastStopLatitude = "DeviceDetailsLastStopLatitude",
  /** The device details location */
  DeviceDetailsLocation = "DeviceDetailsLocation",
  /** The device details current engine hours */
  DeviceDetailsCurrentEngineHours = "DeviceDetailsCurrentEngineHours",
  /** The device type */
  DeviceDeviceType = "DeviceDeviceType",
  /** The device product identifier */
  DeviceProductId = "DeviceProductId",
  /** The device major */
  DeviceMajor = "DeviceMajor",
  /** The device minor */
  DeviceMinor = "DeviceMinor",
  /** The device serial number */
  DeviceSerialNumber = "DeviceSerialNumber",
  /** The device license plate */
  DeviceLicensePlate = "DeviceLicensePlate",
  /** The device license state */
  DeviceLicenseState = "DeviceLicenseState",
  /** The device vin */
  DeviceVIN = "DeviceVIN",
  /** The engine VIN for the device. */
  DeviceEngineVIN = "DeviceEngineVIN",
  /** The device details make */
  DeviceDetailsMake = "DeviceDetailsMake",
  /** The device details model */
  DeviceDetailsModel = "DeviceDetailsModel",
  /** The device details year */
  DeviceDetailsYear = "DeviceDetailsYear",
  /** The device details extra */
  DeviceDetailsExtra = "DeviceDetailsExtra",
  /** The device time zone identifier */
  DeviceTimeZoneId = "DeviceTimeZoneId",
  /** The device status last trip */
  DeviceStatusLastTrip = "DeviceStatusLastTrip",
  /** The device status last GPS record */
  DeviceStatusLastGpsRecord = "DeviceStatusLastGpsRecord",
  /** The device status last status data */
  DeviceStatusLastStatusData = "DeviceStatusLastStatusData",
  /** The device status analysis trouble download status */
  DeviceStatusAnalysisTroubleDownloadStatus = "DeviceStatusAnalysisTroubleDownloadStatus",
  /** The device details driving state */
  DeviceDetailsDrivingState = "DeviceDetailsDrivingState",
  /** The device details privacy mode flag */
  DeviceDetailsPrivacyMode = "DeviceDetailsPrivacyMode",
  /** The route item route name */
  RouteItemRouteName = "RouteItemRouteName",
  /** The route item leg name */
  RouteItemLegName = "RouteItemLegName",
  /** The route item turn number */
  RouteItemTurnNumber = "RouteItemTurnNumber",
  /** The route item turn text */
  RouteItemTurnText = "RouteItemTurnText",
  /** The route item distance */
  RouteItemDistance = "RouteItemDistance",
  /** The route item duration */
  RouteItemDuration = "RouteItemDuration",
  /** The event rule kilometers */
  EventRuleKilometers = "EventRuleKilometers",
  /** The event rule months */
  EventRuleMonths = "EventRuleMonths",
  /** The event rule days */
  EventRuleDays = "EventRuleDays",
  /** The event rule groups */
  EventRuleGroups = "EventRuleGroups",
  /** The event rule date time */
  EventRuleDateTime = "EventRuleDateTime",
  /** The event rule engine hours */
  EventRuleEngineHours = "EventRuleEngineHours",
  /** The event rule comment */
  EventRuleComment = "EventRuleComment",
  /** The reminder event current odometer */
  ReminderEventCurrentOdometer = "ReminderEventCurrentOdometer",
  /** The event occurrence event date */
  EventOccuranceEventDate = "EventOccuranceEventDate",
  /** The event occurrence adjusted odometer */
  EventOccuranceAdjustedOdometer = "EventOccuranceAdjustedOdometer",
  /** The event occurrence comment */
  EventOccuranceComment = "EventOccuranceComment",
  /** The event occurrence reference number */
  EventOccurrenceReference = "EventOccurrenceReference",
  /** The event occurrence labor cost entered by user */
  EventOccurrenceLaborCostInput = "EventOccurrenceLaborCostInput",
  /** The event occurrence labor cost converted based on currency selection */
  EventOccurrenceLaborCostConverted = "EventOccurrenceLaborCostConverted",
  /** The event occurrence parts cost entered by user */
  EventOccurrencePartsCostInput = "EventOccurrencePartsCostInput",
  /** The event occurrence parts cost converted based on currency selection */
  EventOccurrencePartsCostConverted = "EventOccurrencePartsCostConverted",
  /** The event occurrence Tax entered by user */
  EventOccurrenceTaxInput = "EventOccurrenceTaxInput",
  /** The event occurrence Tax converted based on currency selection */
  EventOccurrenceTaxConverted = "EventOccurrenceTaxConverted",
  /** The event occurrence Total Cost entered by user */
  EventOccurrenceTotalCostInput = "EventOccurrenceTotalCostInput",
  /** The event occurrence Total Cost converted based on currency selection */
  EventOccurrenceTotalCostConverted = "EventOccurrenceTotalCostConverted",
  /** The event occurrence Currency entered by User */
  EventOccurrenceCostCurrencyInput = "EventOccurrenceCostCurrencyInput",
  /** The event occurrence Currency Selected in User Settings */
  EventOccurrenceCostCurrencyConverted = "EventOccurrenceCostCurrencyConverted",
  /** The reminder event rule type */
  ReminderEventEventRuleType = "ReminderEventEventRuleType",
  /** The reminder event due date */
  ReminderEventDueDate = "ReminderEventDueDate",
  /** The reminder event due distance */
  ReminderEventDueDistance = "ReminderEventDueDistance",
  /** The reminder event due engine hours */
  ReminderEventDueEngineHours = "ReminderEventDueEngineHours",
  /** The event rule name */
  EventRuleName = "EventRuleName",
  /** The event rule identifier */
  EventRuleId = "EventRuleId",
  /** The event occurrence current odometer */
  EventOccuranceCurrentOdometer = "EventOccuranceCurrentOdometer",
  /** The event occurrence current engine hours */
  EventOccuranceCurrentEngineHours = "EventOccuranceCurrentEngineHours",
  /** The event occurrence adjusted engine hours */
  EventOccuranceAdjustedEngineHours = "EventOccuranceAdjustedEngineHours",
  /** The key insert data log date */
  KeyInsertDataLogDate = "KeyInsertDataLogDate",
  /** The device install result date */
  DeviceInstallResultDate = "DeviceInstallResultDate",
  /** The device install result all download */
  DeviceInstallResultAllDownload = "DeviceInstallResultAllDownload",
  /** The device install result last GPS record */
  DeviceInstallResultLastGpsRecord = "DeviceInstallResultLastGpsRecord",
  /** The device install result last engine record */
  DeviceInstallResultLastEngineRecord = "DeviceInstallResultLastEngineRecord",
  /** The device install result sim number */
  DeviceInstallResultSimNumber = "DeviceInstallResultSimNumber",
  /** The device install result sim active */
  DeviceInstallResultSimActive = "DeviceInstallResultSimActive",
  /** The device install result comments */
  DeviceInstallResultComments = "DeviceInstallResultComments",
  /** The device install request serial number */
  DeviceInstallRequestSerialNumber = "DeviceInstallRequestSerialNumber",
  /** The device install request hardware identifier */
  DeviceInstallRequestHardwareId = "DeviceInstallRequestHardwareId",
  /** The device install request date */
  DeviceInstallRequestDate = "DeviceInstallRequestDate",
  /** The device install request installer name */
  DeviceInstallRequestInstallerName = "DeviceInstallRequestInstallerName",
  /** The device install request installer company */
  DeviceInstallRequestInstallerCompany = "DeviceInstallRequestInstallerCompany",
  /** The device install request odometer */
  DeviceInstallRequestOdometer = "DeviceInstallRequestOdometer",
  /** The device install request asset */
  DeviceInstallRequestAsset = "DeviceInstallRequestAsset",
  /** The device install request comments */
  DeviceInstallRequestComments = "DeviceInstallRequestComments",
  /** The device install history record type */
  DeviceInstallHistoryRecordType = "DeviceInstallHistoryRecordType",
  /** The device install history status */
  DeviceInstallHistoryStatus = "DeviceInstallHistoryStatus",
  /** The device install make and model */
  DeviceInstallMakeAndModel = "DeviceInstallMakeAndModel",
  /** The device install IOX */
  DeviceInstallIox = "DeviceInstallIox",
  /** The device install harness */
  DeviceInstallHarness = "DeviceInstallHarness",
  /** The device harness commen */
  DeviceInstallHarnessComments = "DeviceInstallHarnessComments",
  /** The device install auxiliaries */
  DeviceInstallAuxPorts = "DeviceInstallAuxPorts",
  /** The device install comment */
  DeviceInstallComment = "DeviceInstallComment",
  /** The device install work reference */
  DeviceInstallWorkReference = "DeviceInstallWorkReference",
  /** The device install engine hours */
  DeviceInstallEngineHours = "DeviceInstallEngineHours",
  /** The device install engine protocol */
  DeviceInstallEngineProtocol = "DeviceInstallEngineProtocol",
  /** The device install last communication */
  DeviceInstallLastDeviceCommunication = "DeviceInstallLastDeviceCommunication",
  /** The device install possible issues */
  DeviceInstallPossibleIssues = "DeviceInstallPossibleIssues",
  /** The device installtion photo 1 */
  DeviceInstallPhoto1 = "DeviceInstallPhoto1",
  /** The device installtion photo 2 */
  DeviceInstallPhoto2 = "DeviceInstallPhoto2",
  /** The device installtion photo 3 */
  DeviceInstallPhoto3 = "DeviceInstallPhoto3",
  /** The device installtion photo 4 */
  DeviceInstallPhoto4 = "DeviceInstallPhoto4",
  /** The performance date time */
  PerformanceDateTime = "PerformanceDateTime",
  /** The performance process context */
  PerformanceProcessContext = "PerformanceProcessContext",
  /** The performance source */
  PerformanceSource = "PerformanceSource",
  /** The performance level1 action */
  PerformanceLevel1Action = "PerformanceLevel1Action",
  /** The performance level2 action */
  PerformanceLevel2Action = "PerformanceLevel2Action",
  /** The performance level3 action */
  PerformanceLevel3Action = "PerformanceLevel3Action",
  /** The performance cpu seconds */
  PerformanceCpuSeconds = "PerformanceCpuSeconds",
  /** The performance seconds */
  PerformanceSeconds = "PerformanceSeconds",
  /** The performance level1 count */
  PerformanceLevel1Count = "PerformanceLevel1Count",
  /** The performance level2 count */
  PerformanceLevel2Count = "PerformanceLevel2Count",
  /** The performance level3 count */
  PerformanceLevel3Count = "PerformanceLevel3Count",
  /** The performance total cpu seconds */
  PerformanceTotalCpuSeconds = "PerformanceTotalCpuSeconds",
  /** The performance total seconds */
  PerformanceTotalSeconds = "PerformanceTotalSeconds",
  /** The performance action */
  PerformanceAction = "PerformanceAction",
  /** The performance last value */
  PerformanceLastValue = "PerformanceLastValue",
  /** The performance minimum value */
  PerformanceMinValue = "PerformanceMinValue",
  /** The performance maximum value */
  PerformanceMaxValue = "PerformanceMaxValue",
  /** The performance total value */
  PerformanceTotalValue = "PerformanceTotalValue",
  /** The performance average value */
  PerformanceAverageValue = "PerformanceAverageValue",
  /** The performance count */
  PerformanceCount = "PerformanceCount",
  /** The device programming immobilize arming */
  DeviceProgrammingImmobilizeArming = "DeviceProgrammingImmobilizeArming",
  /** The device programming speeding on */
  DeviceProgrammingSpeedingOn = "DeviceProgrammingSpeedingOn",
  /** The device programming speeding off */
  DeviceProgrammingSpeedingOff = "DeviceProgrammingSpeedingOff",
  /** The device programming idle minutes */
  DeviceProgrammingIdleMinutes = "DeviceProgrammingIdleMinutes",
  /** The device programming RPM value */
  DeviceProgrammingRpmValue = "DeviceProgrammingRpmValue",
  /** The device programming harsh brake warning */
  DeviceProgrammingHarshBrakeWarning = "DeviceProgrammingHarshBrakeWarning",
  /** The device programming odometer offset */
  DeviceProgrammingOdometerOffset = "DeviceProgrammingOdometerOffset",
  /** The device programming engine hour offset */
  DeviceProgrammingEngineHourOffset = "DeviceProgrammingEngineHourOffset",
  /** The engine status statistics period start date */
  EngineStatusStatisticsPeriodStartDate = "EngineStatusStatisticsPeriodStartDate",
  /** The engine status statistics period end date */
  EngineStatusStatisticsPeriodEndDate = "EngineStatusStatisticsPeriodEndDate",
  /** The engine status statistics distance */
  EngineStatusStatisticsDistance = "EngineStatusStatisticsDistance",
  /** The engine status statistics fuel used */
  EngineStatusStatisticsFuelUsed = "EngineStatusStatisticsFuelUsed",
  /** The engine status statistics zero speed fuel used */
  EngineStatusStatisticsZeroSpeedFuelUsed = "EngineStatusStatisticsZeroSpeedFuelUsed",
  /** The engine status statistics fuel economy metric */
  EngineStatusStatisticsFuelEconomyMetric = "EngineStatusStatisticsFuelEconomyMetric",
  /** The engine status statistics fuel economy us */
  EngineStatusStatisticsFuelEconomyUS = "EngineStatusStatisticsFuelEconomyUS",
  /** The engine status statistics idling */
  EngineStatusStatisticsIdling = "EngineStatusStatisticsIdling",
  /** The engine status statistics period number */
  EngineStatusStatisticsPeriodNumber = "EngineStatusStatisticsPeriodNumber",
  /** The engine status statistics fuel economy - Only when no electric energy is used */
  EngineStatusStatisticsFuelEconomy = "EngineStatusStatisticsFuelEconomy",
  /** The engine status statistics electric energy used */
  EngineStatusStatisticsElectricEnergyUsed = "EngineStatusStatisticsElectricEnergyUsed",
  /** The engine status statistics electric energy used - Equivalent fuel energy */
  EngineStatusStatisticsElectricEnergyUsedFuelEquivalent = "EngineStatusStatisticsElectricEnergyUsedFuelEquivalent",
  /** The engine status statistics electric energy economy - Only when no fuel is used */
  EngineStatusStatisticsElectricEnergyEconomy = "EngineStatusStatisticsElectricEnergyEconomy",
  /** The engine status statistics combined fuel and electric energy economy */
  EngineStatusStatisticsFuelAndElectricEconomy = "EngineStatusStatisticsFuelAndElectricEconomy",
  /** The engine status statistics percentage of electric energy used of the total */
  EngineStatusStatisticsElectricEnergyUsedPercentage = "EngineStatusStatisticsElectricEnergyUsedPercentage",
  /** The engine status statistics Gps distance */
  EngineStatusStatisticsGpsDistance = "EngineStatusStatisticsGpsDistance",
  /** The text message sent date */
  TextMessageSentDate = "TextMessageSentDate",
  /** The text message delivered date */
  TextMessageDeliveredDate = "TextMessageDeliveredDate",
  /** The text message direction to vehicle */
  TextMessageDirectionToVehicle = "TextMessageDirectionToVehicle",
  /** The text message read date */
  TextMessageReadDate = "TextMessageReadDate",
  /** The text message content message */
  TextMessageContentMessage = "TextMessageContentMessage",
  /** The location content latitude */
  LocationContentLatitude = "LocationContentLatitude",
  /** The location content longitude */
  LocationContentLongitude = "LocationContentLongitude",
  /** The location content address */
  LocationContentAddress = "LocationContentAddress",
  /** The canned response options string */
  CannedResponseOptionsString = "CannedResponseOptionsString",
  /** The route comparison detail expected sequence */
  RouteComparisonDetailExpectedSequence = "RouteComparisonDetailExpectedSequence",
  /** The route comparison detail actual sequence */
  RouteComparisonDetailActualSequence = "RouteComparisonDetailActualSequence",
  /** The route comparison detail expected arrival time */
  RouteComparisonDetailExpectedArrivalTime = "RouteComparisonDetailExpectedArrivalTime",
  /** The route comparison detail actual arrival time */
  RouteComparisonDetailActualArrivalTime = "RouteComparisonDetailActualArrivalTime",
  /** The route comparison detail latitude */
  RouteComparisonDetailLatitude = "RouteComparisonDetailLatitude",
  /** The route comparison detail longitude */
  RouteComparisonDetailLongitude = "RouteComparisonDetailLongitude",
  /** The route comparison detail expected stop duration */
  RouteComparisonDetailExpectedStopDuration = "RouteComparisonDetailExpectedStopDuration",
  /** The route comparison detail actual stop duration */
  RouteComparisonDetailActualStopDuration = "RouteComparisonDetailActualStopDuration",
  /** The route comparison detail idling */
  RouteComparisonDetailIdling = "RouteComparisonDetailIdling",
  /** The route comparison detail location */
  RouteComparisonDetailLocation = "RouteComparisonDetailLocation",
  /** The route comparison detail start date time */
  RouteComparisonDetailStartDateTime = "RouteComparisonDetailStartDateTime",
  /** The route comparison detail end date time */
  RouteComparisonDetailEndDateTime = "RouteComparisonDetailEndDateTime",
  /** The route comparison detail office name */
  RouteComparisonDetailOfficeName = "RouteComparisonDetailOfficeName",
  /** The route comparison detail expected driving distance */
  RouteComparisonDetailExpectedDrivingDistance = "RouteComparisonDetailExpectedDrivingDistance",
  /** The route comparison detail actual driving distance */
  RouteComparisonDetailActualDrivingDistance = "RouteComparisonDetailActualDrivingDistance",
  /** The route comparison detail expected driving time span */
  RouteComparisonDetailExpectedDrivingTimeSpan = "RouteComparisonDetailExpectedDrivingTimeSpan",
  /** The route comparison detail actual driving time span */
  RouteComparisonDetailActualDrivingTimeSpan = "RouteComparisonDetailActualDrivingTimeSpan",
  /** The dvir log date time created */
  DVIRLogDateTimeCreated = "DVIRLogDateTimeCreated",
  /** The dvir log driver remark */
  DVIRLogDriverRemark = "DVIRLogDriverRemark",
  /** The dvir log repair date */
  DVIRLogRepairDate = "DVIRLogRepairDate",
  /** The dvir log repair remark */
  DVIRLogRepairRemark = "DVIRLogRepairRemark",
  /** The dvir log defects */
  DVIRDefects = "DVIRDefects",
  /** The dvir log certify date */
  DVIRLogCertifyDate = "DVIRLogCertifyDate",
  /** The dvir log certify remark */
  DVIRLogCertifyRemark = "DVIRLogCertifyRemark",
  /** The dvir log is safe to operate */
  DVIRLogIsSafeToOperate = "DVIRLogIsSafeToOperate",
  /** The type of DVIR log (pre/post/unknown) */
  DVIRLogLogType = "DVIRLogLogType",
  /** The dvir detail odometer */
  DVIRDetailOdometer = "DVIRDetailOdometer",
  /** The dvir detail hubometer */
  DVIRDetailHubometer = "DVIRDetailHubometer",
  /** The dvir detail Inspector */
  DVIRLogDetailInspector = "DVIRLogDetailInspector",
  /** The dvir detail Operator */
  DVIRLogDetailOperator = "DVIRLogDetailOperator",
  /** The dvir detail Load height */
  DVIRLogLoadHeight = "DVIRLogLoadHeight",
  /** The dvir detail Load width */
  DVIRLogLoadWidth = "DVIRLogLoadWidth",
  /** The dvir detail Authority name */
  DVIRLogAuthorityName = "DVIRLogAuthorityName",
  /** The dvir detail Authority address */
  DVIRLogAuthorityAddress = "DVIRLogAuthorityAddress",
  /** The dvir detail Device Vin */
  DVIRLogDeviceVin = "DVIRLogDeviceVin",
  /** The dvir detail address */
  DVIRDetailAddress = "DVIRDetailAddress",
  /** The dvir detail defects */
  DVIRDetailDefects = "DVIRDetailDefects",
  /** The dvir detail normal defects */
  DVIRDetailNormalDefects = "DVIRDetailNormalDefects",
  /** The dvir detail Unregulated defects */
  DVIRDetailUnregulatedDefects = "DVIRDetailUnregulatedDefects",
  /** The dvir detail critical defects */
  DVIRDetailCriticalDefects = "DVIRDetailCriticalDefects",
  /** The dvir defect's name */
  DVIRDetailDefectName = "DVIRDetailDefectName",
  /** The dvir defect's severity level */
  DVIRDetailDefectSeverityLevel = "DVIRDetailDefectSeverityLevel",
  /** The dvir defect's repair status */
  DVIRDetailDefectRepairStatus = "DVIRDetailDefectRepairStatus",
  /** The dvir defect's repair DateTime */
  DVIRDefectRepairDateTime = "DVIRDefectRepairDateTime",
  /** The dvir defect's defect remark */
  DVIRDetailDefectRemark = "DVIRDetailDefectRemark",
  /** The duty status identifier */
  DutyStatusId = "DutyStatusId",
  /** Status from previous period */
  DutyStatusFromPreviousPeriod = "DutyStatusFromPreviousPeriod",
  /** The duty status date time */
  DutyStatusDateTime = "DutyStatusDateTime",
  /** The duty status */
  DutyStatusStatus = "DutyStatusStatus",
  /** The duty status verify date time */
  DutyStatusVerifyDateTime = "DutyStatusVerifyDateTime",
  /** The duty status edit date time */
  DutyStatusEditDateTime = "DutyStatusEditDateTime",
  /** The duty status co drivers */
  DutyStatusCoDrivers = "DutyStatusCoDrivers",
  /** The duty status location */
  DutyStatusLocation = "DutyStatusLocation",
  /** The duty status origin */
  DutyStatusOrigin = "DutyStatusOrigin",
  /** The duty status parentId */
  DutyStatusParentId = "DutyStatusParentId",
  /** The duty status state */
  DutyStatusState = "DutyStatusState",
  /** The duty status version */
  DutyStatusVersion = "DutyStatusVersion",
  /** The duty status detail odometer */
  DutyStatusDetailOdometer = "DutyStatusDetailOdometer",
  /** The duty status detail latitude */
  DutyStatusDetailLatitude = "DutyStatusDetailLatitude",
  /** The duty status detail longitude */
  DutyStatusDetailLongitude = "DutyStatusDetailLongitude",
  /** The duty status detail distance */
  DutyStatusDetailDistance = "DutyStatusDetailDistance",
  /** The duty status detail trailers */
  DutyStatusDetailTrailers = "DutyStatusDetailTrailers",
  /** The duty status detail shipments */
  DutyStatusDetailShipments = "DutyStatusDetailShipments",
  /** The duty status detail hos ruleset */
  DutyStatusDetailHosRuleSet = "DutyStatusDetailHosRuleSet",
  /** The duty status detail annotations */
  DutyStatusDetailAnnotations = "DutyStatusDetailAnnotations",
  /** The duty status detail duration */
  DutyStatusDetailDuration = "DutyStatusDetailDuration",
  /** The duty status sequence */
  DutyStatusSequence = "DutyStatusSequence",
  /** The duty status malfunction type */
  DutyStatusMalfunctionType = "DutyStatusMalfunctionType",
  /** The hos violation driving duration */
  HosViolationDrivingDuration = "HosViolationDrivingDuration",
  /** The hos violation start date time */
  HosViolationStartDateTime = "HosViolationStartDateTime",
  /** The hos violation end date time */
  HosViolationEndDateTime = "HosViolationEndDateTime",
  /** The hos violation reason */
  HosViolationReason = "HosViolationReason",
  /** The hos violation hours limit. */
  HosViolationHoursLimit = "HosViolationHoursLimit",
  /** The hos violation days limit. */
  HosViolationDaysLimit = "HosViolationDaysLimit",
  /** The hos violation type */
  HosViolationType = "HosViolationType",
  /** The availability of rest limits */
  HosAvailabilityRest = "HosAvailabilityRest",
  /** The availability of driving limits */
  HosAvailabilityDriving = "HosAvailabilityDriving",
  /** The availability of duty limits */
  HosAvailabilityDuty = "HosAvailabilityDuty",
  /** The availability of workday limits */
  HosAvailabilityWorkday = "HosAvailabilityWorkday",
  /** The availability of cycle limits */
  HosAvailabilityCycle = "HosAvailabilityCycle",
  /** The trailer comment */
  TrailerComment = "TrailerComment",
  /** The trailer identifier */
  TrailerId = "TrailerId",
  /** The name of the trailer */
  TrailerName = "TrailerName",
  /** The groups of trailer */
  TrailerGroups = "TrailerGroups",
  /** The device active from */
  DeviceActiveFrom = "DeviceActiveFrom",
  /** The device active to */
  DeviceActiveTo = "DeviceActiveTo",
  /** The device details device plan */
  DeviceDetailsDevicePlan = "DeviceDetailsDevicePlan",
  /** The device details current exceptions */
  DeviceDetailsCurrentExceptions = "DeviceDetailsCurrentExceptions",
  /** The device time to download */
  DeviceTimeToDownload = "DeviceTimeToDownload",
  /** The device ignore downloads until */
  DeviceIgnoreDownloadsUntil = "DeviceIgnoreDownloadsUntil",
  /** The device programming immobilize unit */
  DeviceProgrammingImmobilizeUnit = "DeviceProgrammingImmobilizeUnit",
  /** The device programming speed indicator */
  DeviceProgrammingSpeedIndicator = "DeviceProgrammingSpeedIndicator",
  /** The device programming speed warning */
  DeviceProgrammingSpeedWarning = "DeviceProgrammingSpeedWarning",
  /** The device programming beep on idle */
  DeviceProgrammingBeepOnIdle = "DeviceProgrammingBeepOnIdle",
  /** The device programming beep on RPM */
  DeviceProgrammingBeepOnRpm = "DeviceProgrammingBeepOnRpm",
  /** The device programming aux1 warning */
  DeviceProgrammingAux1Warning = "DeviceProgrammingAux1Warning",
  /** The device programming aux2 warning */
  DeviceProgrammingAux2Warning = "DeviceProgrammingAux2Warning",
  /** The device programming aux3 warning */
  DeviceProgrammingAux3Warning = "DeviceProgrammingAux3Warning",
  /** The device programming aux4 warning */
  DeviceProgrammingAux4Warning = "DeviceProgrammingAux4Warning",
  /** The device programming aux5 warning */
  DeviceProgrammingAux5Warning = "DeviceProgrammingAux5Warning",
  /** The device programming aux6 warning */
  DeviceProgrammingAux6Warning = "DeviceProgrammingAux6Warning",
  /** The device programming aux7 warning */
  DeviceProgrammingAux7Warning = "DeviceProgrammingAux7Warning",
  /** The device programming aux8 warning */
  DeviceProgrammingAux8Warning = "DeviceProgrammingAux8Warning",
  /** The device programming aux1 warning speed */
  DeviceProgrammingAux1WarningSpeed = "DeviceProgrammingAux1WarningSpeed",
  /** The device programming aux2 warning speed */
  DeviceProgrammingAux2WarningSpeed = "DeviceProgrammingAux2WarningSpeed",
  /** The device programming aux3 warning speed */
  DeviceProgrammingAux3WarningSpeed = "DeviceProgrammingAux3WarningSpeed",
  /** The device programming aux4 warning speed */
  DeviceProgrammingAux4WarningSpeed = "DeviceProgrammingAux4WarningSpeed",
  /** The device programming aux5 warning speed */
  DeviceProgrammingAux5WarningSpeed = "DeviceProgrammingAux5WarningSpeed",
  /** The device programming aux6 warning speed */
  DeviceProgrammingAux6WarningSpeed = "DeviceProgrammingAux6WarningSpeed",
  /** The device programming aux7 warning speed */
  DeviceProgrammingAux7WarningSpeed = "DeviceProgrammingAux7WarningSpeed",
  /** The device programming aux8 warning speed */
  DeviceProgrammingAux8WarningSpeed = "DeviceProgrammingAux8WarningSpeed",
  /** The notification row recipient type */
  NotificationRowRecipientType = "NotificationRowRecipientType",
  /** The fuel event date time */
  FuelEventDateTime = "FuelEventDateTime",
  /** The fuel event product type */
  FuelEventProductType = "FuelEventProductType",
  /** The fuel event volume */
  FuelEventVolume = "FuelEventVolume",
  /** The fuel event odometer */
  FuelEventOdometer = "FuelEventOdometer",
  /** The fuel event cost */
  FuelEventCost = "FuelEventCost",
  /** The fuel event currency code */
  FuelEventCurrencyCode = "FuelEventCurrencyCode",
  /** The fuel used event distance */
  FuelUsedEventDistance = "FuelUsedEventDistance",
  /** The fuel up event total fuel used */
  FuelUpEventTotalFuelUsed = "FuelUpEventTotalFuelUsed",
  /** The fuel up event tank capacity */
  FuelUpEventTankCapacity = "FuelUpEventTankCapacity",
  /** The fuel up event tank capacity source */
  FuelUpEventTankCapacitySource = "FuelUpEventTankCapacitySource",
  /** The fuel up event tank level low value */
  FuelUpEventTankLevelLow = "FuelUpEventTankLevelLow",
  /** The fuel up event tank level high value */
  FuelUpEventTankLevelHigh = "FuelUpEventTankLevelHigh",
  /** The fuel transaction vin */
  FuelTransacationVin = "FuelTransacationVin",
  /** The fuel transaction driver name */
  FuelTransacationDriverName = "FuelTransacationDriverName",
  /** The fuel transaction1 latitude */
  FuelTransaction1Latitude = "FuelTransaction1Latitude",
  /** The fuel transaction1 longitude */
  FuelTransaction1Longitude = "FuelTransaction1Longitude",
  /** The fuel transaction2 latitude */
  FuelTransaction2Latitude = "FuelTransaction2Latitude",
  /** The fuel transaction2 longitude */
  FuelTransaction2Longitude = "FuelTransaction2Longitude",
  /** The fuel transaction3 latitude */
  FuelTransaction3Latitude = "FuelTransaction3Latitude",
  /** The fuel transaction3 longitude */
  FuelTransaction3Longitude = "FuelTransaction3Longitude",
  /** The fuel transaction4 latitude */
  FuelTransaction4Latitude = "FuelTransaction4Latitude",
  /** The fuel transaction4 longitude */
  FuelTransaction4Longitude = "FuelTransaction4Longitude",
  /** The fuel up event risk is location match */
  FuelUpEventRiskIsLocationMatch = "FuelUpEventRiskIsLocationMatch",
  /** The fuel up event risk is capacity match */
  FuelUpEventRiskIsCapacityMatch = "FuelUpEventRiskIsCapacityMatch",
  /** The fuel up event risk is engine fuel match */
  FuelUpEventRiskIsEngineFuelMatch = "FuelUpEventRiskIsEngineFuelMatch",
  /** The fuel up event risk is derived volume match */
  FuelUpEventRiskIsDerivedVolumeMatch = "FuelUpEventRiskIsDerivedVolumeMatch",
  /** The fill up record location */
  FillUpRecordLocation = "FillUpRecordLocation",
  /** The fill up record latitude */
  FillUpRecordLatitude = "FillUpRecordLatitude",
  /** The fill up record longitude */
  FillUpRecordLongitude = "FillUpRecordLongitude",
  /** The fill up record transaction1 driver */
  FillUpRecordTransaction1Driver = "FillUpRecordTransaction1Driver",
  /** The fill up record transaction1 date time */
  FillUpRecordTransaction1DateTime = "FillUpRecordTransaction1DateTime",
  /** The fill up record transaction1 cost */
  FillUpRecordTransaction1Cost = "FillUpRecordTransaction1Cost",
  /** The fill up record transaction1 currency code */
  FillUpRecordTransaction1CurrencyCode = "FillUpRecordTransaction1CurrencyCode",
  /** The fill up record transaction1 odometer */
  FillUpRecordTransaction1Odometer = "FillUpRecordTransaction1Odometer",
  /** The fill up record transaction1 vin */
  FillUpRecordTransaction1Vin = "FillUpRecordTransaction1Vin",
  /** The fill up record transaction1 product type */
  FillUpRecordTransaction1ProductType = "FillUpRecordTransaction1ProductType",
  /** The fill up record transaction1 product description */
  FillUpRecordTransaction1ProductDescription = "FillUpRecordTransaction1ProductDescription",
  /** The fill up record transaction1 card number */
  FillUpRecordTransaction1CardNumber = "FillUpRecordTransaction1CardNumber",
  /** The fill up record transaction1 site name */
  FillUpRecordTransaction1SiteName = "FillUpRecordTransaction1SiteName",
  /** The fill up record transaction2 driver */
  FillUpRecordTransaction2Driver = "FillUpRecordTransaction2Driver",
  /** The fill up record transaction2 date time */
  FillUpRecordTransaction2DateTime = "FillUpRecordTransaction2DateTime",
  /** The fill up record transaction2 cost */
  FillUpRecordTransaction2Cost = "FillUpRecordTransaction2Cost",
  /** The fill up record transaction2 currency code */
  FillUpRecordTransaction2CurrencyCode = "FillUpRecordTransaction2CurrencyCode",
  /** The fill up record transaction2 odometer */
  FillUpRecordTransaction2Odometer = "FillUpRecordTransaction2Odometer",
  /** The fill up record transaction2 vin */
  FillUpRecordTransaction2Vin = "FillUpRecordTransaction2Vin",
  /** The fill up record transaction2 product type */
  FillUpRecordTransaction2ProductType = "FillUpRecordTransaction2ProductType",
  /** The fill up record transaction2 product description */
  FillUpRecordTransaction2ProductDescription = "FillUpRecordTransaction2ProductDescription",
  /** The fill up record transaction2 card number */
  FillUpRecordTransaction2CardNumber = "FillUpRecordTransaction2CardNumber",
  /** The fill up record transaction2 site name */
  FillUpRecordTransaction2SiteName = "FillUpRecordTransaction2SiteName",
  /** The fill up record transaction3 driver */
  FillUpRecordTransaction3Driver = "FillUpRecordTransaction3Driver",
  /** The fill up record transaction3 date time */
  FillUpRecordTransaction3DateTime = "FillUpRecordTransaction3DateTime",
  /** The fill up record transaction3 cost */
  FillUpRecordTransaction3Cost = "FillUpRecordTransaction3Cost",
  /** The fill up record transaction3 currency code */
  FillUpRecordTransaction3CurrencyCode = "FillUpRecordTransaction3CurrencyCode",
  /** The fill up record transaction3 odometer */
  FillUpRecordTransaction3Odometer = "FillUpRecordTransaction3Odometer",
  /** The fill up record transaction3 vin */
  FillUpRecordTransaction3Vin = "FillUpRecordTransaction3Vin",
  /** The fill up record transaction3 product type */
  FillUpRecordTransaction3ProductType = "FillUpRecordTransaction3ProductType",
  /** The fill up record transaction3 product description */
  FillUpRecordTransaction3ProductDescription = "FillUpRecordTransaction3ProductDescription",
  /** The fill up record transaction3 card number */
  FillUpRecordTransaction3CardNumber = "FillUpRecordTransaction3CardNumber",
  /** The fill up record transaction3 site name */
  FillUpRecordTransaction3SiteName = "FillUpRecordTransaction3SiteName",
  /** The fill up record transaction4 driver */
  FillUpRecordTransaction4Driver = "FillUpRecordTransaction4Driver",
  /** The fill up record transaction4 date time */
  FillUpRecordTransaction4DateTime = "FillUpRecordTransaction4DateTime",
  /** The fill up record transaction4 cost */
  FillUpRecordTransaction4Cost = "FillUpRecordTransaction4Cost",
  /** The fill up record transaction4 currency code */
  FillUpRecordTransaction4CurrencyCode = "FillUpRecordTransaction4CurrencyCode",
  /** The fill up record transaction4 odometer */
  FillUpRecordTransaction4Odometer = "FillUpRecordTransaction4Odometer",
  /** The fill up record transaction4 vin */
  FillUpRecordTransaction4Vin = "FillUpRecordTransaction4Vin",
  /** The fill up record transaction4 product type */
  FillUpRecordTransaction4ProductType = "FillUpRecordTransaction4ProductType",
  /** The fill up record transaction4 product description */
  FillUpRecordTransaction4ProductDescription = "FillUpRecordTransaction4ProductDescription",
  /** The fill up record transaction4 card number */
  FillUpRecordTransaction4CardNumber = "FillUpRecordTransaction4CardNumber",
  /** The fill up record transaction4 site name */
  FillUpRecordTransaction4SiteName = "FillUpRecordTransaction4SiteName",
  /** The fill up record fuel economy */
  FillUpRecordFuelEconomy = "FillUpRecordFuelEconomy",
  /** The starting date of a charge event */
  ChargeEventStartDate = "ChargeEventStartDate",
  /** The duration of a charge event */
  ChargeEventDuration = "ChargeEventDuration",
  /** The location of a charge event */
  ChargeEventLocation = "ChargeEventLocation",
  /** The zones containing a charge event location */
  ChargeEventZones = "ChargeEventZones",
  /** The charge of a device before a charge event */
  ChargeEventStartCharge = "ChargeEventStartCharge",
  /** The charge of a device after a charge event */
  ChargeEventEndCharge = "ChargeEventEndCharge",
  /**
   * The charge of a device at the beginning of the first charge event in
   *  the charge session that a charge event belongs too
   */
  ChargeEventSessionStartCharge = "ChargeEventSessionStartCharge",
  /**
   * The charge of a device at the end of the last charge event in
   *  the charge session that a charge event belongs too
   */
  ChargeEventSessionEndCharge = "ChargeEventSessionEndCharge",
  /**
   * The average {@link ReportHeading.ChargeEventSessionStartCharge} for all of a charge event's
   *  device's charging sessions
   */
  ChargeEventDeviceAverageStartCharge = "ChargeEventDeviceAverageStartCharge",
  /**
   * The average {@link ReportHeading.ChargeEventSessionEndCharge} for all of a charge event's
   *  device's charging sessions
   */
  ChargeEventDeviceAverageEndCharge = "ChargeEventDeviceAverageEndCharge",
  /** The energy added to a device during a charge event */
  ChargeEventEnergyAdded = "ChargeEventEnergyAdded",
  /** The energy economy of a device between charge events */
  ChargeEventElectricEconomy = "ChargeEventElectricEconomy",
  /** The max power flowing into a device during a charge event */
  ChargeEventMaxPower = "ChargeEventMaxPower",
  /** The type of charging current AC or DC */
  ChargeEventElectricCurrentType = "ChargeEventElectricCurrentType",
  /** The voltage if AC */
  ChargeEventACVoltage = "ChargeEventACVoltage",
  /** The stop time of the trip before the charging session */
  ChargeSessionTripStopTime = "ChargeSessionTripStopTime",
  /** The engine fault summary active fault data count */
  EngineFaultSummaryActiveFaultDataCount = "EngineFaultSummaryActiveFaultDataCount",
  /** The engine fault summary fault data count */
  EngineFaultSummaryFaultDataCount = "EngineFaultSummaryFaultDataCount",
  /** The engine fault summary last fault */
  EngineFaultSummaryLastFault = "EngineFaultSummaryLastFault",
  /** The dvir log identifier */
  DVIRLogId = "DVIRLogId",
  /** The current vocation for the device. */
  DeviceDetailsVocation = "DeviceDetailsVocation",
  /** Electrical system rating of the device. */
  DeviceDetailsElectricalSystemRating = "DeviceDetailsElectricalSystemRating",
  /** The start of a workday. */
  StartOfWorkday = "StartOfWorkday",
  /** Auto vehicle management, corresponding to "pinDevice" */
  AutoVehicleManagement = "AutoVehicleManagement",
  /** The hos settings of device */
  HosSettings = "HosSettings",
  /** The hos log isIgnored flag. */
  DutyStatusIgnoredLog = "DutyStatusIgnoredLog",
  /** The material management start date. */
  MaterialManagementStartDate = "MaterialManagementStartDate",
  /** The material management end date. */
  MaterialManagementEndDate = "MaterialManagementEndDate",
  /** The material management solid type. */
  MaterialManagementSolidType = "MaterialManagementSolidType",
  /** The material management pre-wet type. */
  MaterialManagementPreWetType = "MaterialManagementPreWetType",
  /** The material management anti-ice type. */
  MaterialManagementAntiIceType = "MaterialManagementAntiIceType",
  /** The material management solid total. */
  MaterialManagementSolidTotal = "MaterialManagementSolidTotal",
  /** The material management pre-wet total. */
  MaterialManagementPreWetTotal = "MaterialManagementPreWetTotal",
  /** The material management anti-ice total. */
  MaterialManagementAntiIceTotal = "MaterialManagementAntiIceTotal",
  /** The material management SpreadTime. */
  MaterialManagementSpreadTime = "MaterialManagementSpreadTime",
  /** The material management plow time. */
  MaterialManagementPlowTime = "MaterialManagementPlowTime",
  /** The material management deadhead time. */
  MaterialManagementDeadheadTime = "MaterialManagementDeadheadTime",
  /** The material management travel time. */
  MaterialManagementTravelTime = "MaterialManagementTravelTime",
  /** The material management idle time. */
  MaterialManagementIdleTime = "MaterialManagementIdleTime",
  /** The material management totalT tme. */
  MaterialManagementTotalTime = "MaterialManagementTotalTime",
  /** The material management spread distance. */
  MaterialManagementSpreadDistance = "MaterialManagementSpreadDistance",
  /** The material management plow distance. */
  MaterialManagementPlowDistance = "MaterialManagementPlowDistance",
  /** The material management deadhead distance. */
  MaterialManagementDeadheadDistance = "MaterialManagementDeadheadDistance",
  /** The material management total distance. */
  MaterialManagementTotalDistance = "MaterialManagementTotalDistance",
  /** The material management average solid rate. */
  MaterialManagementAvgSolidRate = "MaterialManagementAvgSolidRate",
  /** The material management average pre-wet rate. */
  MaterialManagementAvgPreWetRate = "MaterialManagementAvgPreWetRate",
  /** The material management average anti-ice rate. */
  MaterialManagementAvgAntiIceRate = "MaterialManagementAvgAntiIceRate",
  /** The fuel volume in the transaction */
  TransactionFuelVolume = "TransactionFuelVolume",
  /** The fuel volume detected from engine data */
  EngineDataFuelVolume = "EngineDataFuelVolume",
  /** The OBD alert status */
  OBDAlertStatus = "OBDAlertStatus",
  /** The route completion pass count. */
  RouteCompletionPassCount = "RouteCompletionPassCount",
  /** The route completion expected pass count. */
  RouteCompletionExpectedPassCount = "RouteCompletionExpectedPassCount",
  /** The route completion percentage. */
  RouteCompletionCompletionPercentage = "RouteCompletionCompletionPercentage",
  /** The route completion start date */
  RouteCompletionDevices = "RouteCompletionDevices",
  /** The fault data fault status. */
  FaultDataStatus = "FaultDataStatus",
  /** Status data record display data. */
  StatusDataRecordDisplayData = "StatusDataRecordDisplayData",
  /** Unit of Measure name for Status data record. */
  StatusDataRecordUnitOfMeasureName = "StatusDataRecordUnitOfMeasureName",
  /** Debugging Status Record display data. */
  DebuggingStatusRecordDisplayData = "DebuggingStatusRecordDisplayData",
  /** Unit of Measure name for Debugging Status Record. */
  DebuggingStatusRecordUnitOfMeasureName = "DebuggingStatusRecordUnitOfMeasureName",
  /** Battery level (%) at trip start */
  TripStartEVBatteryCharge = "TripStartEVBatteryCharge",
  /** Battery level (%) at trip end */
  TripEndEVBatteryCharge = "TripEndEVBatteryCharge",
  /** Total energy in (kwh) while driving */
  TripElectricEnergyUsedWhileDriving = "TripElectricEnergyUsedWhileDriving",
  /** Total energy in (kwh) while idling */
  TripElectricEnergyUsedWhileIdling = "TripElectricEnergyUsedWhileIdling",
  /** Trip total energy in (kwh) */
  TripElectricEnergyUsed = "TripElectricEnergyUsed",
  /** Trip total energy in (kwh/100km) */
  TripElectricEnergyEconomy = "TripElectricEnergyEconomy",
  /** True if DVIR requires certification, false otherwise */
  DVIRDetailNeedsCertify = "DVIRDetailNeedsCertify",
  /** EV Battery Health Report - Make */
  EVBatteryHealthMake = "EVBatteryHealthMake",
  /** EV Battery Health Report - Model */
  EVBatteryHealthModel = "EVBatteryHealthModel",
  /** EV Battery Health Report - Year */
  EVBatteryHealthYear = "EVBatteryHealthYear",
  /** EV Battery Health Report - EV Type */
  EVBatteryHealthEVType = "EVBatteryHealthEVType",
  /** EV Battery Health Report - Detection Date */
  EVBatteryHealthDetectionDate = "EVBatteryHealthDetectionDate",
  /** EV Battery Health Report - 90-Day Rolling Average Data Collection Start Date */
  EVBatteryHealth90DayRollingAverageDataCollectionStartDate = "EVBatteryHealth90DayRollingAverageDataCollectionStartDate",
  /** EV Battery Health Report - 90-Day Rolling Average Data Collection End Date */
  EVBatteryHealth90DayRollingAverageDataCollectionEndDate = "EVBatteryHealth90DayRollingAverageDataCollectionEndDate",
  /** EV Battery Health Report - Detection Date Odometer */
  EVBatteryHealthDetectionDateOdometer = "EVBatteryHealthDetectionDateOdometer",
  /** EV Battery Health Report - EV Battery Health */
  EVBatteryHealthEVBatteryHealth = "EVBatteryHealthEVBatteryHealth",
  /** EV Battery Health Report - Lower 90% Confidence Interval */
  EVBatteryHealthLower90ConfidenceInterval = "EVBatteryHealthLower90ConfidenceInterval",
  /** EV Battery Health Report - Upper 90% Confidence Interval */
  EVBatteryHealthUpper90ConfidenceInterval = "EVBatteryHealthUpper90ConfidenceInterval",
  /** EV Battery Health Report - Usable Detected Capacity */
  EVBatteryHealthUsableDetectedCapacity = "EVBatteryHealthUsableDetectedCapacity",
  /** EV Battery Health Report - Usable Detected Capacity 90% Confidence Interval */
  EVBatteryHealthUsableDetectedCapacity90ConfidenceInterval = "EVBatteryHealthUsableDetectedCapacity90ConfidenceInterval",
  /** EV Battery Health Report - Usable Original Capacity */
  EVBatteryHealthUsableOriginalCapacity = "EVBatteryHealthUsableOriginalCapacity",
  /** EV Battery Health Report - Usable Original Capacity 90% Confidence Interval */
  EVBatteryHealthUsableOriginalCapacity90ConfidenceInterval = "EVBatteryHealthUsableOriginalCapacity90ConfidenceInterval",
  /** EV Battery Health Report - Usable Detected Capacity Source */
  EVBatteryHealthUsableDetectedCapacitySource = "EVBatteryHealthUsableDetectedCapacitySource",
  /** EV Battery Health Report - Usable Original Capacity Source */
  EVBatteryHealthUsableOriginalCapacitySource = "EVBatteryHealthUsableOriginalCapacitySource",
  /** EV Battery Health Report - Usable Detected Capacity Lower 90% Confidence Interval */
  EVBatteryHealthUsableDetectedCapacityLower90ConfidenceInterval = "EVBatteryHealthUsableDetectedCapacityLower90ConfidenceInterval",
  /** EV Battery Health Report - Usable Detected Capacity Upper 90% Confidence Interval */
  EVBatteryHealthUsableDetectedCapacityUpper90ConfidenceInterval = "EVBatteryHealthUsableDetectedCapacityUpper90ConfidenceInterval",
  /** EV Battery Health Report - Usable Original Capacity Lower 90% Confidence Interval */
  EVBatteryHealthUsableOriginalCapacityLower90ConfidenceInterval = "EVBatteryHealthUsableOriginalCapacityLower90ConfidenceInterval",
  /** EV Battery Health Report - Usable Original Capacity Upper 90% Confidence Interval */
  EVBatteryHealthUsableOriginalCapacityUpper90ConfidenceInterval = "EVBatteryHealthUsableOriginalCapacityUpper90ConfidenceInterval",
}
