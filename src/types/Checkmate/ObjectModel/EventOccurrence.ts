//     This code was generated by a Reinforced.Typings tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.

import { Entity } from "./Entity";
import { EventRule } from "./EventRule";
import { EventType } from "./EventType";
import { Currency } from "./Currencies/Currency";
import { Device } from "./Device";
import { MediaFile } from "./Files/MediaFile";

/**
 *  A particular occurrence of an {@link EventRule}.
 *
 * @deprecated
 */
export interface EventOccurrence extends Entity {
  /** Gets or sets a value indicating whether this {@link EventOccurrence} is active. */
  active: boolean;
  /** Gets or sets the adjusted engine hours. */
  adjustedEngineHours: string;
  /** Gets or sets the adjusted odometer. */
  adjustedOdometer: number;
  /** Gets or sets free text field where any user information can be stored and referenced for this entity. */
  comment: string;
  /** Gets or sets the currency in which costs were entered. */
  costCurrency: Currency;
  /** Gets the code for CostCurrency */
  costCurrencyCode: string;
  /** Gets or sets the currency in which costs will be displayed. */
  costCurrencyConverted: Currency;
  /** Gets the code for CostCurrencyConverted */
  costCurrencyConvertedCode: string;
  /** Gets or sets a value indicating whether the currency conversionfailed */
  currencyConversionFailed: boolean;
  /** Gets or sets the current engine hours. */
  currentEngineHours: string;
  /** Gets or sets the current odometer. */
  currentOdometer: number;
  /** Gets or sets gets the {@link Device}. */
  device: Device;
  /** Gets or sets the event date. */
  eventDate: Date;
  /** Gets or sets the event rule. */
  eventRule: EventRule;
  /** Gets or sets the event type. Should only be set if EventRule is null */
  eventType: EventType;
  /** Gets or sets the amount paid for labor. */
  laborCost: number;
  /** Gets or sets the amount paid for labor converted to UI Settings Currency. */
  laborCostConverted: number;
  /** Gets or sets the list of {@link MediaFile} for a event. */
  mediaFiles: MediaFile[];
  /** Gets or sets the amount paid for parts. */
  partsCost: number;
  /** Gets or sets the amount paid for Parts cost converted to UI Settings Currency. */
  partsCostConverted: number;
  /** Gets or sets the reference or work order number for the event. */
  reference: string;
  /** Gets or sets the amount paid in taxes. */
  taxCost: number;
  /** Gets or sets the amount paid in taxes converted to UI Settings Currency. */
  taxCostConverted: number;
  /** Gets or sets the amount paid in taxes. */
  totalCost: number;
  /** Gets or sets the amount paid in taxes. */
  totalCostConverted: number;
}
