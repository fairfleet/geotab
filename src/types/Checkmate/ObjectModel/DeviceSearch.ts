//     This code was generated by a Reinforced.Typings tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.

import { Search } from "./Search";
import { DeviceType } from "./DeviceType";
import { GroupSearch } from "./GroupSearch";
import { GroupFilterCondition } from "./GroupFilterCondition";
import { CustomPropertySearch } from "./CustomPropertySearch";
import { DevicePlan } from "./DevicePlan";
import { DevicePlanBillingInfo } from "./DevicePlanBillingInfo";
import { DeviceReplacementInfoSearch } from "./DeviceReplacement/DeviceReplacementInfoSearch";

/** The object used to specify the arguments when searching for a {@link Device}. */
export interface DeviceSearch extends Search {
  /**
   * Gets or sets search for Devices with comments matching this value. Wildcard can be used by
   *  prepending/appending "%" to string. Example "%comments%".
   */
  comment: string;
  /** Gets or sets search for Devices that contain certain {@link Property} and/or {@link PropertyValue`1} and/or belong to certain {@link PropertySet}. */
  customPropertySearch: CustomPropertySearch;
  /**
   * Gets or sets search for Devices with these unique {@link Id}(s). Not Supported
   *  for searching for devices, only for {@link DeviceStatusInfo}.
   */
  deviceIds: string[];
  /** Gets or sets search for devices that have the {@link DeviceSearch.DevicePlan} speicified */
  devicePlan: DevicePlan;
  /**
   * Gets or sets search for devices that have the {@link DeviceSearch.DevicePlanBillingInfo} speicified.
   *  Available {@link DeviceSearch.DevicePlanBillingInfo} options are:
   *  <list><item><description>DevicePlanName</description></item></list>
   */
  devicePlanBillingInfo: DevicePlanBillingInfo;
  /**
   * Gets or sets search for devices that contain {@link DeviceReplacementInfo} and filter them by {@link DeviceSearch.DeviceReplacementInfoSearch}
   *  Available {@link DeviceSearch.DeviceReplacementInfoSearch} options are:
   *  <list><item><description>{@link DeviceReplacementStatus}</description></item></list>
   */
  deviceReplacementInfoSearch: DeviceReplacementInfoSearch;
  /** Gets or sets search for Devices of this {@link DeviceType}. */
  deviceType: DeviceType;
  /**
   * Gets or sets search for a Device by Vehicle Identification Number (VIN) reported by the engine.
   *  This is the unique number assigned to the vehicle during manufacturing and reported through any
   *  non-legacy GO device.
   *  This differs from {@link DeviceSearch.VehicleIdentificationNumber} in that it is the last VIN reported from the
   *  Device, and will be updated whether it is classified as valid or invalid.
   */
  engineVehicleIdentificationNumber: string;
  /** Gets or sets filter for {@link UntrackedAsset}. */
  excludeUntrackedAssets: boolean;
  /**
   * Gets or sets search for Devices that were active at this date or after. Set to UTC now to search for
   *  only currently active (non-archived) devices.
   */
  fromDate: Date;
  /** Gets or sets for devices and asset types. */
  groupFilterCondition: GroupFilterCondition;
  /**
   * Gets or sets search for Devices that are a member of these {@link GroupSearch}(s). Each GroupSearch is an object within the array.
   *  Available
   *  GroupSearch options are:
   *  <list><item><description>Id</description></item></list>
   */
  groups: GroupSearch[];
  /** Gets or sets search for a Device with this unique hardware ID. */
  hardwareId: number;
  /** Gets or sets search for devices that contain {@link DeviceReplacementInfo} and include this information to the result. */
  includeDeviceReplacementInfo: boolean;
  /** Gets or sets search for entities that contain specific keywords in all wildcard string-searchable fields. */
  keywords: string[];
  /**
   * Gets or sets search for Devices with a license plate matching this value. Wildcard can be used by
   *  prepending/appending "%" to string. Example "%LicensePlate%".
   */
  licensePlate: string;
  /**
   * Gets or sets search for Devices with this Name. Name is the primary description of the Device. Wildcard can be
   *  used by prepending/appending "%" to string. Example "%name%".
   */
  name: string;
  /**
   * Gets or sets search for a Device by its unique serial number. Wildcard can be
   *  used by prepending/appending "%" to string. Example "%SerialNumber%".
   */
  serialNumber: string;
  /** Gets or sets search for Devices that were active at this date or before. */
  toDate: Date;
  /**
   * Gets or sets search for a Device by Vehicle Identification Number (VIN). This is the unique number assigned
   *  to the vehicle during manufacturing.
   *  This differs from {@link DeviceSearch.EngineVehicleIdentificationNumber} in that it is the last VIN reported
   *  from the Device that was determined to be valid. Wildcard can be
   *  used by prepending/appending "%" to string. Example "%VehicleIdentificationNumber%".
   */
  vehicleIdentificationNumber: string;
}
