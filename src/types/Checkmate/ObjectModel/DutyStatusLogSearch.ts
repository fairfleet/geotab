//     This code was generated by a Reinforced.Typings tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.

import { Search } from "./Search";
import { DeviceSearch } from "./DeviceSearch";
import { DutyStatusLogType } from "./DutyStatusLogType";
import { UserSearch } from "./UserSearch";
import { DutyStatusMalfunctionTypes } from "./DutyStatusMalfunctionTypes";
import { DutyStatusOrigin } from "./DutyStatusOrigin";

/**
 *  The object used to specify the arguments when searching for {@link DutyStatusLog}(s).
 */
export interface DutyStatusLogSearch extends Search {
  /**
   * Gets or sets filter by the {@link DeviceSearch} options. Providing a device ID will
   *  search for any DutyStatusLogs that are assigned to that Device.
   *  Providing the Groups will search for DutyStatusLogs for that have Devices in that group.
   *  Available DeviceSearch options are:
   *  <list><item><description>Id</description></item><item><description>Groups</description></item></list>
   *
   * @remarks UserSearch is always applied first if both DeviceSearch and UserSearch are provided.
   */
  deviceSearch: DeviceSearch;
  /** Gets or sets search for DutyStatusLogs that were recorded at this date or after. */
  fromDate: Date;
  /**
   * Gets or sets search for DutyStatusLogs and include boundary logs outside the from and to dates
   *  (for example, the log immediately preceding the from date).
   */
  includeBoundaryLogs: boolean;
  /** Gets or sets search for DutyStatusLogs and include compliance properties (e.g. Odometer, EngineHours). */
  includeCompliance: boolean;
  /** Gets or sets whether to populate locations for DutyStatusLogs. This can be expensive. */
  includeLocations: boolean;
  /** Gets or sets include modification history of the {@link DutyStatusLog} results. */
  includeModifications: boolean;
  /** Gets or sets search for DutyStatusLogs based on {@link DutyStatusMalfunctionTypes}. */
  malfunction: DutyStatusMalfunctionTypes[];
  /** Gets or sets search for {@link DutyStatusLog}s with a maximum of this version. */
  maxVersion: number;
  /** Gets or sets search for {@link DutyStatusLog}s with a minimum of this version. */
  minVersion: number;
  /** Gets or sets search for DutyStatusLogs based on {@link DutyStatusOrigin}. */
  origin: DutyStatusOrigin[];
  /** Gets or sets search for DutyStatusLogs with the provided {@link DutyStatusLogType}s. */
  statuses: DutyStatusLogType[];
  /** Gets or sets search for DutyStatusLogs that were recorded at this date or before. */
  toDate: Date;
  /**
   * Gets or sets search for DutyStatusLogs with this {@link UserSearch} Id.
   *  Available UserSearch options are:.
   *  <list><item><description>Id</description></item><item><description>GroupSearch</description></item></list>
   */
  userSearch: UserSearch;
}
