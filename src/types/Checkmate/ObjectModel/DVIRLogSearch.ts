//     This code was generated by a Reinforced.Typings tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.

import { Search } from "./Search";
import { UserSearch } from "./UserSearch";
import { GroupSearch } from "./GroupSearch";
import { DeviceSearch } from "./DeviceSearch";
import { TrailerSearch } from "./TrailerSearch";
import { DVIRLogType } from "./DVIRLogType";

/**
 *  The object used to specify the arguments when searching for {@link DVIRLog}(s). A trailerSearch and deviceSearch cannot be used at the same time because a DVIR log entry is only ever associated with one asset type (for instance, if the "device" is set, "trailer" is always null and vice versa).
 */
export interface DVIRLogSearch extends Search {
  /**
   * Gets or sets search for DVIRLogs certified by a {@link User}.
   *  Available {@link UserSearch} options are:.
   *  <list><item><description>Id</description></item></list>
   */
  certifiedBySearch: UserSearch;
  /**
   * Gets or sets search for DVIRLogs that are a member of these defect {@link Group}(s).
   *  Available
   *  {@link GroupSearch} options are:.
   *  <list><item><description>Id</description></item></list>
   */
  defectSearch: GroupSearch[];
  /**
   * Gets or sets filter by the {@link DeviceSearch} options. Providing a device ID will
   *  search for any DVIRLogs that are assigned to that Device.
   *  Providing the Groups will search for DVIRLogs for that have Devices in that group.
   *  Available DeviceSearch options are:
   *  <list><item><description>Id</description></item><item><description>Groups</description></item></list>
   */
  deviceSearch: DeviceSearch;
  /** Gets or sets search for DVIRLogs that were recorded at this date or after. */
  fromDate: Date;
  /**
   * Gets or sets search for DVIRLogs and include boundary logs outside the from and to dates
   *  (for example, the log immediately preceding the from date).
   */
  includeBoundaryLogs: boolean;
  /** Gets or sets search for DVIRLogs and include logs that have been marked as rejected by the driver. */
  includeRejected: boolean;
  /** Gets or sets search for DVIRLogs that have been certified ({@link DVIRLog.CertifyDate} is not null). */
  isCertified: boolean;
  /** Gets or sets search for DVIRLogs that have. {@link DVIRLog.Defects} */
  isDefective: boolean;
  /** Gets or sets search for DVIRLogs that have been repaired ({@link DVIRLog.RepairDate} is not null). */
  isRepaired: boolean;
  /** Gets or sets search for DVIRLogs which are safe or are not safe to operate. */
  isSafeToOperate: boolean;
  /** Gets or sets search for {@link DVIRLog}s that match the specified {@link DVIRLogType}s. */
  logTypes: DVIRLogType[];
  /**
   * Gets or sets
   *  Search for {@link DVIRLog}s with a maximum of this version.
   *
   * @deprecated
   */
  maxVersion: number;
  /**
   * Gets or sets
   *  Search for {@link DVIRLog}s with a minimum of this version.
   *
   * @deprecated
   */
  minVersion: number;
  /**
   * Gets or sets search to populate. {@link DVIRLogType}
   *
   * @deprecated
   */
  populateLogType: boolean;
  /**
   * Gets or sets search for DVIRLogs repaired by a {@link User}.
   *  Available {@link UserSearch} options are:.
   *  <list><item><description>Id</description></item></list>
   */
  repairedBySearch: UserSearch;
  /** Gets or sets search for DVIRLogs have a match to this. {@link DefectRemark} */
  searchByRemark: string;
  /** Gets or sets search for DVIRLogs that were recorded at this date or before. */
  toDate: Date;
  /**
   * Gets or sets filter by the {@link TrailerSearch} options. Providing a trailer ID will
   *  search for any DVIRLogs that are assigned to that Trailer.
   *  Providing the Groups will search for DVIRLogs for that have Trailer in that group.
   *  Available TrailerSearch options are:
   *  <list><item><description>Id</description></item><item><description>Groups</description></item></list>
   */
  trailerSearch: TrailerSearch;
  /**
   * Gets or sets search for DVIRLogs with this {@link UserSearch} Id.
   *  Available UserSearch options are:.
   *  <list><item><description>Id</description></item></list>
   */
  userSearch: UserSearch;
}
