//     This code was generated by a Reinforced.Typings tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.

import { Search } from "../Search";
import { DeviceSearch } from "../DeviceSearch";

/** The object used to specify the arguments when searching for {@link EnergySnapshotRecord}. */
export interface EnergySnapshotRecordSearch extends Search {
  /**
   * Gets or sets the device search criteria for the {@link EnergySnapshotRecordSearch} records with this {@link DeviceSearch} Id. Available DeviceSearch options are:.
   *  <list><item><description>Id</description><description>Groups</description></item></list>
   */
  deviceSearch: DeviceSearch;
  /** Gets or sets the from date, which is used to search for {@link EnergySnapshotRecord} recorded on or after this date. */
  fromDate: Date;
  /** Gets or sets the IncludeAdjacent flag which, when true, includes the {@link EnergySnapshotRecord} records immediately before and after the date range specified */
  includeAdjacent: boolean;
  /** Gets or sets value. If &gt; 0, retrieve n snapshots after the to date. */
  includeSnapshotsAfterToDate: number;
  /** Gets or sets value. If &gt; 0, retrieve n snapshots before the from date. */
  includeSnapshotsBeforeFromDate: number;
  /** Gets or sets the isWaitingForData flag which is used to search for {@link EnergySnapshotRecord} records recorded with a isWaitingForData flag set to true */
  isWaitingForData: boolean;
  /** Gets or sets logs reasons. Includes the {@link EnergySnapshotRecord} records with matching log reasons. */
  logReasons: string[];
  /** Gets or sets the to date, which is used to search for {@link EnergySnapshotRecord} recorded on or before this date. */
  toDate: Date;
}
