//     This code was generated by a Reinforced.Typings tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.

import { EntityWithVersion } from "../EntityWithVersion";
import { FuelTransactionProductType } from "./FuelTransactionProductType";
import { FuelUpEventConfidences } from "./FuelUpEventConfidences";

/** Log of fueling events. */
export interface FuelEvent extends EntityWithVersion {
  /** Gets or sets the confidence associated with the Fuel record. */
  confidence: FuelUpEventConfidences;
  /** Gets or sets the cost of the fuel transaction. Default [0]. */
  cost: number;
  /** Gets or sets the three digit ISO 427 currency code (http://www.xe.com/iso4217.php). Default ["USD"]. */
  currencyCode: string;
  /** Gets or sets the UTC date and time of the transaction. */
  dateTime: Date;
  /** Gets or sets the {@link Coordinate} of the transaction retailer. Default [0,0]. */
  location: unknown;
  /** Gets or sets the driver recorded odometer reading in km. Default [0]. */
  odometer: number;
  /** Gets or sets the {@link FuelTransactionProductType} of this transaction. Default [Unknown]. */
  productType: FuelTransactionProductType;
  /** Gets or sets the volume of fuel purchased in Liters. Default [0]. */
  volume: number;
}
