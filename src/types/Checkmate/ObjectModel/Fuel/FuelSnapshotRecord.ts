//     This code was generated by a Reinforced.Typings tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.

import { Entity } from "../Entity";
import { Device } from "../Device";

/** Snapshot of Log of Fuel Usage */
export interface FuelSnapshotRecord extends Entity {
  /** Gets or sets the UTC date and time of the event. */
  dateTime: Date;
  /** Gets or sets the StatusData for the {@link Device} specified. */
  device: Device;
  /** Gets or sets the fuel tank level PERCENTAGE. Default [0]. */
  fuelTankLevelPercentage: number;
  /** Gets or sets the fuel tank level by VOLUME in Liters. Default [0]. */
  fuelTankLevelVolumeL: number;
  /** Gets or sets a value indicating whether the current record is waiting for data */
  isWaitingForData: boolean;
  /** Gets or sets the amount of driving fuel used in Liters. Default [0]. */
  lifetimeDrivingFuelUsedL: number;
  /** Gets or sets the Distance Driven in Km when Fuel or Energy was used. */
  lifetimeFuelOrEnergyDistanceDrivenKm: number;
  /** Gets or sets the amount of fuel used while idling in Liters. Default [0]. */
  lifetimeIdlingFuelUsedL: number;
  /** Gets or sets the amount of fuel used while PTO is engaged, in Liters. Default [0]. */
  lifetimePtoFuelUsedL: number;
  /** Gets or sets the amount of time passed. Default [0]. */
  lifetimePtoOnTimeHours: number;
  /** Gets or sets the amount of total trip fuel used in Liters. Default [0]. */
  lifetimeTripFuelUsedL: number;
  /** Gets or sets the reason for logging the snapshot. */
  logReason: string;
}
