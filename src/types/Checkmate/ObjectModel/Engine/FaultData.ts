//     This code was generated by a Reinforced.Typings tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.

import { Entity } from "../Entity";
import { Controller } from "./Controller";
import { Device } from "../Device";
import { Diagnostic } from "./Diagnostic";
import { User } from "../User";
import { FailureMode } from "./FailureMode";
import { FaultLampState } from "./FaultLampState";
import { FaultState } from "./FaultState";
import { FlashCode } from "./FlashCode";
import { DtcSeverity } from "./DtcSeverity";
import { DtcClass } from "./DtcClass";

/**
 *  A record that represents a fault code record from the engine
 *  system of the specific {@link Device}.
 */
export interface FaultData extends Entity {
  /** Gets or sets whether the amber warning lamp state. */
  amberWarningLamp: boolean;
  /** Gets or sets the {@link DtcClass} code of the fault. */
  classCode: DtcClass;
  /** Gets or sets the {@link Controller} code related to the fault code; if applicable. */
  controller: Controller;
  /** Gets or sets the number of times the fault occurred. */
  count: number;
  /** Gets or sets the date and time at which the event occurred. */
  dateTime: Date;
  /** Gets or sets the {@link Device} that generated the fault. */
  device: Device;
  /** Gets or sets the {@link Diagnostic} associated with the fault. */
  diagnostic: Diagnostic;
  /** Gets or sets the date and time that the DismissUser dismissed the fault. */
  dismissDateTime: Date;
  /** Gets or sets the {@link User} that dismissed the fault. */
  dismissUser: User;
  /** Gets or sets the {@link FailureMode} of the fault; if applicable. */
  failureMode: FailureMode;
  /**
   * Gets or sets the {@link FaultLampState} of a J1939 vehicle. See
   *  {@link FaultLampState} for the possible values.
   */
  faultLampState: FaultLampState;
  /**
   * Gets or sets the {@link FaultState} code from the engine system of
   *  the specific device.
   */
  faultState: FaultState;
  /**
   * Gets or sets the {@link FaultStatus}(s) from the engine system of
   *  the specific device.
   */
  faultStates: unknown;
  /** Gets or sets the {@link FlashCode} associated with the fault. */
  flashCode: FlashCode;
  /** Gets or sets the unique identifier for the entity. See {@link Id}. */
  id: string;
  /** Gets or sets the malfunction light state. */
  malfunctionLamp: boolean;
  /** Gets or sets whether the protect warning lamp is on. */
  protectWarningLamp: boolean;
  /** Gets or sets whether the red stop lamp is on. */
  redStopLamp: boolean;
  /** Gets or sets the {@link DtcSeverity} of the fault. */
  severity: DtcSeverity;
  /** Gets or sets the source address for enhanced faults. */
  sourceAddress: number;
}
