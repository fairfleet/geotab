//     This code was generated by a Reinforced.Typings tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.

import { Search } from "./Search";
import { DeviceSearch } from "./DeviceSearch";
import { EventRuleSearch } from "./EventRuleSearch";

/**
 *  The object used to specify the arguments when searching for
 *  {@link EventDeviation}(s).
 *
 * @deprecated
 */
export interface EventDeviationSearch extends Search {
  /** Gets or sets a value indicating whether gets or sets search for active {@link EventDeviation}s recorded Only. */
  activeOnly: boolean;
  /** Gets or sets a list of Device Ids to search by. {@link Device} */
  deviceIds: string[];
  /**
   * Gets or sets search for {@link EventDeviation}s matching this
   *  {@link DeviceSearch}. Providing a device ID will
   *  search for any EventDeviations that are assigned to that Device.
   *  Providing the Groups will search for EventDeviations for that have Devices in that group.
   *  Available DeviceSearch options are:.
   *  <list><item><description>Id</description></item><item><description>Groups</description></item></list>
   */
  deviceSearch: DeviceSearch;
  /** Gets or sets a list of EventRule Ids to search by. {@link EventRule} */
  eventRuleIds: string[];
  /**
   * Gets or sets search for {@link EventDeviation}s matching this
   *  {@link EventRuleSearch}. Providing a event rule id will
   *  search for any EventDeviations that are assigned to that Event Rule.
   *  Providing the Groups will search for EventDeviations for that have Event Rules in that group.
   *  Available EventRuleSearch options are:.
   *  <list><item><description>Id</description></item><item><description>Groups</description></item><item><description>IncludeGroups</description></item></list>
   */
  eventRuleSearch: EventRuleSearch;
}
