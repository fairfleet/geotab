//     This code was generated by a Reinforced.Typings tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.

import { Search } from "./Search";
import { DeviceSearch } from "./DeviceSearch";
import { Coordinate } from "./Coordinate";
import { UserSearch } from "./UserSearch";

/** The object used to specify the arguments when searching for {@link DeviceStatusInfo}(s). */
export interface DeviceStatusInfoSearch extends Search {
  /** Gets or sets the maximum number of Devices to search for when specifying a "Position". */
  closestAssetLimit: number;
  /**
   * Gets or sets search for {@link DeviceStatusInfo}(s) from a device that matches the
   *  {@link DeviceSearch} Id or in the Groups specified. This includes archived and deleted devices.
   *  Available DeviceSearch options are:.
   *  <list><item><description>Id</description></item><item><description>Groups</description></item></list>
   */
  deviceSearch: DeviceSearch;
  /** Gets or sets a value indicating whether to exclude exception events. Default [false]. */
  excludeExceptionEvents: boolean;
  /** Gets or sets {@link DeviceStatusInfo}{@link Id} search criteria. */
  id: string;
  /** Gets or sets the maximum Id of the search criteria. */
  maxId: string;
  /** Gets or sets the maximum search radius centre at Position when looking for nearest Devices in kilometers. */
  maxSearchRadius: number;
  /**
   * Gets or sets search for Status Info for Devices in the vicinity of the provided
   *  {@link Coordinate}. Starting from this position, an outward search for
   *  Devices will continue until the number of devices found matches the number defined in the "ClosestAssetLimit"
   *  property.
   */
  position: Coordinate;
  /**
   * Gets or sets search for Device Status Info associated with this {@link UserSearch} Id.
   *  Available UserSearch options are:.
   *  <list><item><description>Id</description></item></list>
   */
  userSearch: UserSearch;
}
